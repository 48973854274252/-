if getgenv().RealNamelessLoaded then return end

local function NACaller(pp)--helps me log better
	local s,err=pcall(pp)
	if not s then warn("NA script err: "..err) end
end



local NAbegin=tick()

NACaller(function() getgenv().RealNamelessLoaded=true end)
NACaller(function() getgenv().NATestingVer=false end)

--[[ Version ]]--
local curVer=2.19

--[[ Brand ]]--
local mainName='Nameless Admin'
local testingName='NA Testing'
local adminName='NA'
if getgenv().NATestingVer then
	adminName=testingName
else
	adminName=mainName
end

if not gethui then
	getgenv().gethui=function()
		local h=(game:GetService("CoreGui"):FindFirstChildWhichIsA("ScreenGui") or game:GetService("CoreGui") or game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui"))
		return h
	end
end

if identifyexecutor()=="Solara" or not fireproximityprompt then -- proximity prompt fix | Credits: Benomat (https://scriptblox.com/u/benomat)
	getgenv().fireproximityprompt=function(pp)
		local oldenabled=pp.Enabled
		local oldhold=pp.HoldDuration
		local oldrlos=pp.RequiresLineOfSight
		pp.Enabled=true
		pp.HoldDuration=0
		pp.RequiresLineOfSight=false
		wait(.23)
		pp:InputHoldBegin()
		task.wait()
		pp:InputHoldEnd()
		wait(.1)
		pp.Enabled=pp.Enabled
		pp.HoldDuration=pp.HoldDuration
		pp.RequiresLineOfSight=pp.RequiresLineOfSight
	end
end

local GetService=game.GetService
local iamcore=gethui()
local NA_storage=Instance.new("Folder")--just in case something is added before the important naming and parenting
if not game:IsLoaded() then
	local waiting=Instance.new("Message")
	waiting.Parent=iamcore
	waiting.Text=adminName..' is waiting for the game to load'
	game.Loaded:Wait()
	waiting:Destroy()
end
local loader=''
if getgenv().NATestingVer then
	loader=[[loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/Nameless-Admin/main/NA%20testing.lua"))();]]
else
	loader=[[loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/Nameless-Admin/main/Source.lua"))();]]
end

NACaller(function()
	local teleportConnection=game.Players.LocalPlayer.OnTeleport:Connect(function(State)
		if (not teleportedServers) then
			local queueonteleport=syn and syn.queue_on_teleport or queue_on_teleport or function() end
			queueonteleport(loader)
		end
	end)
end)

--Notification library
local Notification=loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/Nameless-Admin/main/NamelessAdminNotifications.lua"))();
local Notify=Notification.Notify;

wait();--added wait due to the Http being a bit delayed on returning (should fix the issue where Nameless Admin wouldn't load sometimes)

--Custom file functions checker checker
local CustomFunctionSupport=isfile and isfolder and writefile and readfile and listfiles;
local FileSupport=isfile and isfolder and writefile and readfile and makefolder;

--Creates folder & files for Prefix & Plugins
if FileSupport then
	if not isfolder('Nameless-Admin') then
		makefolder('Nameless-Admin')
	else
	end

	if not isfile("Nameless-Admin/Prefix.txt") then
		writefile("Nameless-Admin/Prefix.txt",';')
	else
	end
end
local prefixCheck=";"
if FileSupport then
	prefixCheck=readfile("Nameless-Admin/Prefix.txt",';')
else
	prefixCheck=";"
	Notify({
		Description="Your exploit does not support read/write file";
		Title=adminName;
		Duration=5;
	});
end
--[[ PREFIX AND OTHER STUFF. ]]--
local opt={
	prefix=prefixCheck,
	tupleSeparator=',',
	ui={},
	keybinds={},
}

--[[ Update Logs ]]--
local updLogs={
	log1='Small bug fixes';
	log2="Improved a few command's functionality";
}

local updDate="7/28/2024"

--[[ VARIABLES ]]--
local PlaceId,JobId,GameId=game.PlaceId,game.JobId,game.GameId
local Players=game:GetService("Players");
local UserInputService=game:GetService("UserInputService");
local vim=game:GetService("VirtualInputManager");
local AssetService=game:GetService("AssetService");
local ProximityPromptService=game:GetService("ProximityPromptService");
local TweenService=game:GetService("TweenService");
local RunService=game:GetService("RunService");
local TeleportService=game:GetService("TeleportService");
local HttpService=game:GetService('HttpService');
local RunService2=game:FindService("RunService");
local StarterGui=game:GetService("StarterGui");
local SoundService=game:GetService("SoundService");
local Lighting=game:GetService("Lighting");
local ReplicatedStorage=game:GetService("ReplicatedStorage");
local GuiService=game:GetService("GuiService");
local COREGUI=gethui();
local CoreGui=gethui();
local coregui=gethui();
local IsOnMobile=table.find({Enum.Platform.IOS,Enum.Platform.Android},UserInputService:GetPlatform());
local sethidden=sethiddenproperty or set_hidden_property or set_hidden_prop
local Player=game:GetService("Players").LocalPlayer;
local plr=game:GetService("Players").LocalPlayer;
local PlrGui=Player:FindFirstChild("PlayerGui");
local speaker=Player
local IYLOADED=false--This is used for the ;iy command that executes infinite yield commands using this admin command script (BTW)
local Character=Player.Character;
local Humanoid=Character and Character:FindFirstChildWhichIsA("Humanoid") or false
local Clicked=true
_G.Spam=false
--[[ FOR LOOP COMMANDS ]]--
local view=false
local anniblockspam=false
local control=false
local FakeLag=false
local Loopvoid=false
local Loopkill=false
local Loopbring=false
local Loopbanish=false
local Loopvoid=false
local Loopcuff=false
local loopgrab=false
local Loopstand=false
local Looptornado=false
local Loopmute=false
local Loopglitch=false
local Watch=false
local Admin={}
_G.NAadminsLol={
	156256804;--v3r
	530829101;--Viper
	229501685;--legshot
	3470956640;--Bart3kk
	1456118719;--zzz
	817571515;--Aimlock
	144324719;--Cosmic
	1844177730;--glexinator
	2624269701;--Akim
}


--[[ Some more variables ]]--

local localPlayer=Player
local LocalPlayer=Player
local character=Player.Character
local mouse=localPlayer:GetMouse()
local camera=workspace.CurrentCamera
local camtype=camera.CameraType
local Commands,Aliases={},{}
local player,plr,lp=game:GetService("Players").LocalPlayer,game:GetService("Players").LocalPlayer,game:GetService("Players").LocalPlayer

NACaller(function()
	Players.LocalPlayer.CharacterAdded:Connect(function(c)
		character=c
		Character=c
	end)
end)

local bringc={}

--[[ Welcome Messages ]]--
local msg={
	"Hey";
	"Hello";
	"Hi";
	"Hi There";
	"Hola";
}

--[[ Goofy Text ]]--
local Goofer={
	"Egg";
	"i am a goofy goober";
	"mmmm lasagna";
	"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
	"i am wondering if i even have a life";
	"[REDACTED]";
	"hey guys welcome to another video";
	"‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è";
	":-(";
	"(‚ïØ¬∞‚ñ°¬∞)‚ïØÔ∏µ ‚îª‚îÅ‚îª";
	"freaky";
	"unreal";
	"üíÄüíÄüíÄ";
	"X_X";
	"not bothered to add a message here";
}

--[[ Prediction ]]--
function levenshtein(s,t)
	local d={}
	local lenS,lenT=#s,#t
	for i=0,lenS do
		d[i]={}
		d[i][0]=i
	end
	for j=0,lenT do
		d[0][j]=j
	end
	for i=1,lenS do
		for j=1,lenT do
			local cost=(s:sub(i,i)==t:sub(j,j)) and 0 or 1
			d[i][j]=math.min(d[i-1][j]+1,d[i][j-1]+1,d[i-1][j-1]+cost)
		end
	end
	return d[lenS][lenT]
end

function didYouMean(arg)
	local closer=nil
	local min=math.huge

	for cmd in pairs(Commands) do
		local j=levenshtein(arg,cmd)
		if j<min then
			min=j
			closer=cmd
		end
	end

	for alias in pairs(Aliases) do
		local j=levenshtein(arg,alias)
		if j<min then
			min=j
			closer=alias
		end
	end

	return closer
end

function isRelAdmin(Player)
	for _,id in ipairs(_G.NAadminsLol) do
		if id==game.Players.LocalPlayer.UserId then
			return false
		elseif Player.UserId==id then
			return true
		end
	end
	return false
end

function loadedResults(res)
	if res==nil then res=0 end
	local sec=tonumber(res)
	local hr=math.floor(sec / 3600)
	local min=math.floor((sec % 3600) / 60)
	local remain=sec % 60
	local format=''
	if hr > 0 then
		format=string.format("%d:%02d:%05.2f | Hours,Minutes,Seconds",hr,min,remain)
	elseif min > 0 then
		format=string.format("%d:%05.2f | Minutes,Seconds",min,remain)
	else
		format=string.format("%.2f | Seconds",remain)
	end
	return format
end


--[[ COMMAND FUNCTIONS ]]--
local commandcount=0
cmd={}
cmd.add=function(...)
	local vars={...}
	local aliases,info,func=vars[1],vars[2],vars[3]
	for i,cmdName in pairs(aliases) do
		if i==1 then
			Commands[cmdName:lower()]={func,info}
		else
			Aliases[cmdName:lower()]={func,info}
		end
	end
	commandcount=commandcount+1
end

cmd.run=function(args)
	local caller,arguments=args[1],args; table.remove(args,1);

	local success,msg=pcall(function()
		local command=Commands[caller:lower()] or Aliases[caller:lower()]
		if command then
			command[1](unpack(arguments))
		else
			local closest=didYouMean(caller:lower())
			if closest then
				Notify({
					Description="Command [ "..caller.." ] doesn't exist\nDid you mean [ "..closest.." ]?";
					Title=adminName;
					Duration=4;
				});
			else
					--[[Notify({
						Description="Command ("..caller..") not found";
						Title=adminName;
						Duration=4;
					});]]
			end
		end
	end)
	if not success then warn(adminName..": "..msg) end
end

function randomString()
	local length=math.random(10,20)
	local array={}
	for i=1,length do
		array[i]=string.char(math.random(32,126))
	end
	return table.concat(array)
end

--[[ Fully setup Nameless admin storage ]]
NA_storage.Name=randomString()
NA_storage.Parent=iamcore

--[[ LIBRARY FUNCTIONS ]]--
local lib={}
lib.wrap=function(f)
	return coroutine.wrap(f)()
end

local wrap=lib.wrap

local wait=function(int)
	if not int then int=0 end
	local t=tick()
	repeat
		RunService.Heartbeat:Wait(0)
	until (tick()-t) >=int
	return (tick()-t),t
end

function r15(plr)
	plr=plr or game:GetService("Players").LocalPlayer
	if plr then
		if plr.Character:FindFirstChildOfClass('Humanoid').RigType==Enum.HumanoidRigType.R15 then
			return true
		end
	end
end

function r6(Player)
	Player=Player or game:GetService("Players").LocalPlayer
	if Player then
		if Player.Character.Humanoid.RigType==Enum.HumanoidRigType.R6 then
			return true
		end
	end
end

function rngMsg()
	return msg[math.random(1,#msg)]
end

function goof()
	return Goofer[math.random(1,#Goofer)]
end

function getRoot(char)
	local rootPart=char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
	return rootPart
end

function getChar()
	return game:GetService("Players").LocalPlayer.Character
end

function getPlrChar(plr)
	local isChar=game:GetService("Players")[plr].Character
	if isChar then
		return isChar
	else
		return false
	end
end

function getBp()
	return game:GetService("Players").LocalPlayer.Backpack
end

function getHum()
	if game:GetService("Players").LocalPlayer and game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
		return game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	else
		return false
	end
end

function getPlrHum(plr)
	if plr and plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") then
		return game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	else
		return false
	end
end

function isNumber(str)
	if tonumber(str)~=nil or str=='inf' then
		return true
	end
end

function FindInTable(tbl,val)
	if tbl==nil then return false end
	for _,v in pairs(tbl) do
		if v==val then return true end
	end 
	return false
end

function GetInTable(Table,Name)
	for i=1,#Table do
		if Table[i]==Name then
			return i
		end
	end
	return false
end

--[[ FUNCTION TO GET A PLAYER ]]--
local getPlr=function(Name)
	if Name:lower()=="random" then
		return Players:GetPlayers()[math.random(#Players:GetPlayers())]
	elseif Name:lower()=="me" then
		return game:GetService("Players").LocalPlayer
	elseif Name==nil then
		return game:GetService("Players").LocalPlayer
	elseif Name:lower()=="friends" then
		local friends={}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr:IsFriendsWith(LocalPlayer.UserId) and plr~=LocalPlayer then
				table.insert(friends,plr)
			end
		end
		return friends
	elseif Name:lower()=="nonfriends" then
		local noFriends={}
		for _,plr in pairs(Players:GetPlayers()) do
			if not plr:IsFriendsWith(LocalPlayer.UserId) and plr~=LocalPlayer then
				table.insert(noFriends,plr)
			end
		end
		return noFriends
	elseif Name:lower()=="enemies" then
		local nonTeam={}
		local team=LocalPlayer.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team~=team then
				table.insert(nonTeam,plr)
			end
		end
		return nonTeam
	elseif Name:lower()=="allies" then
		local teamBuddies={}
		local team=LocalPlayer.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team==team then
				table.insert(teamBuddies,plr)
			end
		end
		return teamBuddies
	else
		Name=Name:lower():gsub("%s","")
		for _,x in next,Players:GetPlayers() do
			if x.Name:lower():match(Name) then
				return x
			elseif x.DisplayName:lower():match("^"..Name) then
				return x
			end
		end
	end
end

--[[ MORE VARIABLES ]]--
local plr=Player
local speaker=Player
local char=plr.Character
local JSONEncode,JSONDecode=HttpService.JSONEncode,HttpService.JSONDecode
local con=game.Loaded.Connect
local LoadTime=tick();

RunService.Stepped:connect(function()
	if anniblockspam then
		game.workspace.Tools.Chest_Invisibility_Cloak.Part.CFrame=CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)

		if game.Players.LocalPlayer.Backpack:FindFirstChild("InvisibilityCloak") then
			game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.InvisibilityCloak)
		end

		for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
			if (v:IsA("Tool")) then
				v.Handle.Mesh:Destroy()
			end
		end

		for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
			if (v:IsA("Tool")) then
				v.Parent=workspace
			end
		end

	end
end)

local ESPenabled=false


function round(num,numDecimalPlaces)
	local mult=10^(numDecimalPlaces or 0)
	return math.floor(num*mult+0.5) / mult
end

function getIdentity()--returns the number of the identity
	local LogService=game:GetService("LogService")
	local output=""
	local con=nil
	con=LogService.MessageOut:Connect(function(msg,msgType)
		if msgType==Enum.MessageType.MessageOutput then
			local identityNum=msg:lower():match("current identity is (%d+)")
			if identityNum then
				output=identityNum
				con:Disconnect()
			end
		end
	end)
	printidentity()
	task.wait();

	return output
end

local function placeName()
	local page=game:GetService("AssetService"):GetGamePlacesAsync()
	while true do
		for _,place in ipairs(page:GetCurrentPage()) do
			if place.PlaceId==PlaceId then
				return place.Name
			end
		end
		if page.IsFinished then
			break
		end
		page:AdvanceToNextPageAsync()
	end
	return "unknown"
end

function removeESP()
	for i,c in pairs(COREGUI:GetChildren()) do
		if string.sub(c.Name,-4)=='_ESP' then
			c:Destroy()
		end
	end
end

function ESP(plr)
	task.spawn(function()
		for i,v in pairs(COREGUI:GetChildren()) do
			if v.Name==plr.Name..'_ESP' then
				v:Destroy()
			end
		end
		wait()
		if plr.Character and plr.Name~=Players.LocalPlayer.Name and not COREGUI:FindFirstChild(plr.Name..'_ESP') then
			local ESPholder=Instance.new("Folder")
			ESPholder.Name=plr.Name..'_ESP'
			ESPholder.Parent=COREGUI
			repeat wait(1) until plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")

			local a=Instance.new("Highlight")
			a.Name=plr.Name
			a.Parent=ESPholder
			a.Adornee=plr.Character
			a.FillTransparency=0.45
			a.FillColor=Color3.fromRGB(0,255,0)

			if plr.Character and plr.Character:FindFirstChild('Head') then
				local BillboardGui=Instance.new("BillboardGui")
				local TextLabel=Instance.new("TextLabel")
				BillboardGui.Adornee=plr.Character.Head
				BillboardGui.Name=plr.Name
				BillboardGui.Parent=ESPholder
				BillboardGui.Size=UDim2.new(0,100,0,150)
				BillboardGui.StudsOffset=Vector3.new(0,1,0)
				BillboardGui.AlwaysOnTop=true
				TextLabel.Parent=BillboardGui
				TextLabel.BackgroundTransparency=1
				TextLabel.Position=UDim2.new(0,0,0,-50)
				TextLabel.Size=UDim2.new(0,100,0,100)
				TextLabel.Font=Enum.Font.SourceSansSemibold
				TextLabel.TextSize=17
				TextLabel.TextColor3=Color3.new(12,4,20)
				TextLabel.TextStrokeTransparency=0.3
				TextLabel.TextYAlignment=Enum.TextYAlignment.Bottom
				TextLabel.Text='@'..plr.Name..' | '..plr.DisplayName..''
				TextLabel.ZIndex=10
				local espLoopFunc
				local addedFunc
				addedFunc=plr.CharacterAdded:Connect(function()
					if ESPenabled then
						espLoopFunc:Disconnect()
						ESPholder:Destroy()
						repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
						ESP(plr)
						addedFunc:Disconnect()
					else
						addedFunc:Disconnect()
					end
				end)
				function espLoop()
					if COREGUI:FindFirstChild(plr.Name..'_ESP') then
						if plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid") and Players.LocalPlayer.Character and getRoot(Players.LocalPlayer.Character) and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
							local pos=math.floor((getRoot(Players.LocalPlayer.Character).Position-getRoot(plr.Character).Position).magnitude)
							TextLabel.Text='@'..plr.Name..' | '..plr.DisplayName ..' | Studs: '..pos
							a.Adornee=plr.Character
						end
					else
						addedFunc:Disconnect()
						espLoopFunc:Disconnect()
					end
				end
				espLoopFunc=RunService.RenderStepped:Connect(espLoop)
			end
		end
	end)
end



local Signal1,Signal2=nil,nil

function mobilefly(speed)
	local controlModule=require(game.Players.LocalPlayer.PlayerScripts:WaitForChild('PlayerModule'):WaitForChild("ControlModule"))
	local character=game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
	local rootPart=getRoot(Character)

	local existingBV=rootPart:FindFirstChild("VelocityHandler")
	local existingBG=rootPart:FindFirstChild("GyroHandler")

	if not existingBV then
		local bv=Instance.new("BodyVelocity")
		bv.Name="VelocityHandler"
		bv.MaxForce=Vector3.new(0,0,0)
		bv.Velocity=Vector3.new(0,0,0)
		bv.Parent=rootPart
	end

	if not existingBG then
		local bg=Instance.new("BodyGyro")
		bg.Name="GyroHandler"
		bg.MaxTorque=Vector3.new(9e9,9e9,9e9)
		bg.P=1000
		bg.D=50
		bg.Parent=rootPart
	end

	Signal1=game.Players.LocalPlayer.CharacterAdded:Connect(function(newChar)
		local newRootPart=newChar:WaitForChild("HumanoidRootPart")

		local newBV=newRootPart:FindFirstChild("VelocityHandler")
		local newBG=newRootPart:FindFirstChild("GyroHandler")

		if not newBV then
			local bv=Instance.new("BodyVelocity")
			bv.Name="VelocityHandler"
			bv.MaxForce=Vector3.new(0,0,0)
			bv.Velocity=Vector3.new(0,0,0)
			bv.Parent=newRootPart
		end

		if not newBG then
			local bg=Instance.new("BodyGyro")
			bg.Name="GyroHandler"
			bg.MaxTorque=Vector3.new(9e9,9e9,9e9)
			bg.P=1000
			bg.D=50
			bg.Parent=newRootPart
		end
	end)

	local camera=game.Workspace.CurrentCamera

	Signal2=RunService.RenderStepped:Connect(function()
		local character=game.Players.LocalPlayer.Character
		local rootPart=character and character:FindFirstChild("HumanoidRootPart")
		local humanoid=character and character:FindFirstChildOfClass("Humanoid")
		local bv=rootPart and rootPart:FindFirstChild("VelocityHandler")
		local bg=rootPart and rootPart:FindFirstChild("GyroHandler")

		if character and humanoid and rootPart and bv and bg then
			bv.MaxForce=Vector3.new(9e9,9e9,9e9)
			bg.MaxTorque=Vector3.new(9e9,9e9,9e9)
			humanoid.PlatformStand=true

			bg.CFrame=camera.CFrame
			local direction=controlModule:GetMoveVector()
			local newVelocity=Vector3.new()

			if direction.X~=0 then
				newVelocity=newVelocity+camera.CFrame.RightVector*(direction.X*speed)
			end
			if direction.Z~=0 then
				newVelocity=newVelocity-camera.CFrame.LookVector*(direction.Z*speed)
			end

			bv.Velocity=newVelocity
		end
	end)
end

function unmobilefly()
	local char=game.Players.LocalPlayer.Character
	root=getRoot(char)
	if char and root then
		if root:FindFirstChild("VelocityHandler") then
			root.VelocityHandler:Destroy()
		end
		if root:FindFirstChild("GyroHandler") then
			root.GyroHandler:Destroy()
		end
		local humanoid=character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			humanoid.PlatformStand=false
		end
	end
	if Signal1 then Signal1:Disconnect() end
	if Signal2 then Signal2:Disconnect() end
end


function x(v)
	if v then
		for _,i in pairs(workspace:GetDescendants()) do
			if i:IsA("BasePart") and not i.Parent:FindFirstChild("Humanoid") and not i.Parent.Parent:FindFirstChild("Humanoid") then
				i.LocalTransparencyModifier=0.5
			end
		end
	else
		for _,i in pairs(workspace:GetDescendants()) do
			if i:IsA("BasePart") and not i.Parent:FindFirstChild("Humanoid") and not i.Parent.Parent:FindFirstChild("Humanoid") then
				i.LocalTransparencyModifier=0
			end
		end
	end
end

local cmdlp=game.Players.LocalPlayer

plr=cmdlp

local cmdm=plr:GetMouse()

function sFLY(vfly)
	FLYING=false
	speedofthefly=10
	speedofthevfly=10
	while not cmdlp or not cmdlp.Character or not cmdlp.Character:FindFirstChild('HumanoidRootPart') or not cmdlp.Character:FindFirstChild('Humanoid') or not cmdm do
		wait()
	end 
	local T=cmdlp.Character.HumanoidRootPart
	local CONTROL={F=0,B=0,L=0,R=0,Q=0,E=0}
	local lCONTROL={F=0,B=0,L=0,R=0,Q=0,E=0}
	local SPEED=0
	function FLY()
		FLYING=true
		local BG=Instance.new('BodyGyro',T)
		local BV=Instance.new('BodyVelocity',T)
		BG.P=9e4
		BG.maxTorque=Vector3.new(9e9,9e9,9e9)
		BG.cframe=T.CFrame
		BV.velocity=Vector3.new(0,0,0)
		BV.maxForce=Vector3.new(9e9,9e9,9e9)
		spawn(function()
			while FLYING do
				if not vfly then
					cmdlp.Character:FindFirstChild("Humanoid").PlatformStand=true
				end
				if CONTROL.L+CONTROL.R~=0 or CONTROL.F+CONTROL.B~=0 or CONTROL.Q+CONTROL.E~=0 then
					SPEED=50
				elseif not (CONTROL.L+CONTROL.R~=0 or CONTROL.F+CONTROL.B~=0 or CONTROL.Q+CONTROL.E~=0) and SPEED~=0 then
					SPEED=0
				end
				if (CONTROL.L+CONTROL.R)~=0 or (CONTROL.F+CONTROL.B)~=0 or (CONTROL.Q+CONTROL.E)~=0 then
					BV.velocity=((workspace.CurrentCamera.CoordinateFrame.lookVector*(CONTROL.F+CONTROL.B))+((workspace.CurrentCamera.CoordinateFrame*CFrame.new(CONTROL.L+CONTROL.R,(CONTROL.F+CONTROL.B+CONTROL.Q+CONTROL.E)*0.2,0).p)-workspace.CurrentCamera.CoordinateFrame.p))*SPEED
					lCONTROL={F=CONTROL.F,B=CONTROL.B,L=CONTROL.L,R=CONTROL.R}
				elseif (CONTROL.L+CONTROL.R)==0 and (CONTROL.F+CONTROL.B)==0 and (CONTROL.Q+CONTROL.E)==0 and SPEED~=0 then
					BV.velocity=((workspace.CurrentCamera.CoordinateFrame.lookVector*(lCONTROL.F+lCONTROL.B))+((workspace.CurrentCamera.CoordinateFrame*CFrame.new(lCONTROL.L+lCONTROL.R,(lCONTROL.F+lCONTROL.B+CONTROL.Q+CONTROL.E)*0.2,0).p)-workspace.CurrentCamera.CoordinateFrame.p))*SPEED
				else
					BV.velocity=Vector3.new(0,0,0)
				end
				BG.cframe=workspace.CurrentCamera.CoordinateFrame
				wait()
			end
			CONTROL={F=0,B=0,L=0,R=0,Q=0,E=0}
			lCONTROL={F=0,B=0,L=0,R=0,Q=0,E=0}
			SPEED=0
			BG:destroy()
			BV:destroy()
			cmdlp.Character.Humanoid.PlatformStand=false
		end)
	end
	cmdm.KeyDown:connect(function(KEY)
		if KEY:lower()=='w' then
			if vfly then
				CONTROL.F=speedofthevfly
			else
				CONTROL.F=speedofthefly
			end
		elseif KEY:lower()=='s' then
			if vfly then
				CONTROL.B=-speedofthevfly
			else
				CONTROL.B=-speedofthefly
			end
		elseif KEY:lower()=='a' then
			if vfly then
				CONTROL.L=-speedofthevfly
			else
				CONTROL.L=-speedofthefly
			end
		elseif KEY:lower()=='d' then
			if vfly then
				CONTROL.R=speedofthevfly
			else
				CONTROL.R=speedofthefly
			end
		elseif KEY:lower()=='y' then
			if vfly then
				CONTROL.Q=speedofthevfly*2
			else
				CONTROL.Q=speedofthefly*2
			end
		elseif KEY:lower()=='t' then
			if vfly then
				CONTROL.E=-speedofthevfly*2
			else
				CONTROL.E=-speedofthefly*2
			end
		end
	end)
	cmdm.KeyUp:connect(function(KEY)
		if KEY:lower()=='w' then
			CONTROL.F=0
		elseif KEY:lower()=='s' then
			CONTROL.B=0
		elseif KEY:lower()=='a' then
			CONTROL.L=0
		elseif KEY:lower()=='d' then
			CONTROL.R=0
		elseif KEY:lower()=='y' then
			CONTROL.Q=0
		elseif KEY:lower()=='t' then
			CONTROL.E=0
		end
	end)
	FLY()
end


local tool=nil
spawn(function()
	repeat wait() until game:GetService("Players").LocalPlayer.Character
	tool=getBp():FindFirstChildOfClass("Tool") or getChar():FindFirstChildOfClass("Tool")
end)

function attachTool(tool,cf)
	for i,v in pairs(tool:GetDescendants()) do
		if not (v:IsA("BasePart") or v:IsA("Mesh") or v:IsA("SpecialMesh")) then
			v:Destroy()
		end
	end
	wait()
	getChar().Humanoid.Name=1
	local l=getChar()["1"]:Clone()
	l.Parent=getChar()
	l.Name="Humanoid"

	getChar()["1"]:Destroy()
	game.Workspace.CurrentCamera.CameraSubject=getChar()
	getChar().Animate.Disabled=true
	wait();
	getChar().Humanoid.DisplayDistanceType="None"

	tool.Parent=getChar()
end

local nc=false
local ncLoop=nil
ncLoop=game:GetService("RunService").Stepped:Connect(function()
	if nc and getChar()~=nil then
		for _,v in pairs(getChar():GetDescendants()) do
			if v:IsA("BasePart") and v.CanCollide==true then
				v.CanCollide=false
			end
		end
	end
end)

local netsleepTargets={}
local nsLoop=nil
nsLoop=game:GetService("RunService").Stepped:Connect(function()
	if #netsleepTargets==0 then return end
	for i,v in pairs(netsleepTargets) do
		if v.Character then
			for i,v in pairs(v.Character:GetChildren()) do
				if v:IsA("BasePart")==false and v:IsA("Accessory")==false then continue end
				if v:IsA("BasePart") then
					sethiddenproperty(v,"NetworkIsSleeping",true)
				elseif v:IsA("Accessory") and v:FindFirstChild("Handle") then
					sethiddenproperty(v.Handle,"NetworkIsSleeping",true)
				end
			end
		end
	end
end)

function getTorso(x)
	x=x or getChar()
	return x:FindFirstChild("Torso") or x:FindFirstChild("UpperTorso") or x:FindFirstChild("LowerTorso") or x:FindFirstChild("HumanoidRootPart")
end

local lp=game:GetService("Players").LocalPlayer


--[[ LIB FUNCTIONS ]]--
chatmsgshooks={}
Playerchats={}

lib.LocalPlayerChat=function(...)
	local args={...} 
	if game:GetService("TextChatService"):FindFirstChild("TextChannels") then
		local sendto=game:GetService("TextChatService").TextChannels.RBXGeneral
		if args[2]~=nil and  args[2]~="All"  then
			if not Playerchats[args[2]] then
				for i,v in pairs(game:GetService("TextChatService").TextChannels:GetChildren()) do
					if string.find(v.Name,"RBXWhisper:") then
						if v:FindFirstChild(args[2]) and v:FindFirstChild(game.Players.LocalPlayer.Name) then
							if v[game.Players.LocalPlayer.Name].CanSend==false then
								continue
							end
							sendto=v
							Playerchats[args[2]]=v
							break
						end
					end
				end
			else
				sendto=Playerchats[args[2]]
			end
			if sendto==game:GetService("TextChatService").TextChannels.RBXGeneral then
				chatmsgshooks[args[1]]={args[1],args}
				task.spawn(function()
					game:GetService("TextChatService").TextChannels.RBXGeneral:SendAsync("/w @"..args[2])
				end)
				return "Hooking"
			end
		end
		sendto:SendAsync(args[1] or "")
	else
		if args[2] and args[2]~="All" then
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..args[2].." "..args[1] or "","All")
		else
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(args[1] or "","All")
		end
	end
end

if game:GetService("TextChatService"):FindFirstChild("TextChannels") then
	game:GetService("TextChatService").TextChannels.ChildAdded:Connect(function(v)
		if string.find(v.Name,"RBXWhisper:") then
			task.wait(1)
			for id,va in pairs(chatmsgshooks) do
				if v:FindFirstChild(va[1]) and v:FindFirstChild(game.Players.LocalPlayer.Name) then
					if v[game.Players.LocalPlayer.Name].CanSend==false then
						continue
					end
					Playerchats[va[1]]=v
					chatmsgshooks[id]=nil
					lib.LocalPlayerChat(va[2])
					break
				end
			end
		end
	end)
end

lib.lpchat=lib.LocalPlayerChat

lib.lock=function(instance,par)
	locks[instance]=true
	instance.Parent=par or instance.Parent
	instance.Name="RightGrip"
end
local lock=lib.lock
local locks={}

lib.find=function(t,v)	--mmmmmm
	for i,e in pairs(t) do
		if i==v or e==v then
			return i
		end
	end
	return nil
end

lib.parseText=function(text,watch,rPlr)
	local parsed={}
	if not text then return nil end
	local prefix
	if rPlr then
		prefix=isRelAdmin(rPlr) and ";" or watch
		watch=prefix
	else
		prefix=watch
	end
	for arg in text:gmatch("[^"..watch.."]+") do
		arg=arg:gsub("-","%%-")
		local pos=text:find(arg)
		arg=arg:gsub("%%","")
		if pos then
			local find=text:sub(pos-prefix:len(),pos-1)
			if (find==prefix and watch==prefix) or watch~=prefix then
				table.insert(parsed,arg)
			end
		else
			table.insert(parsed,nil)
		end
	end
	return parsed
end

lib.parseCommand=function(text,rPlr)
	wrap(function()
		local commands
		if rPlr then
			commands=lib.parseText(text,opt.prefix,rPlr)
		else
			commands=lib.parseText(text,opt.prefix)
		end
		for _,parsed in pairs(commands) do
			local args={}
			for arg in parsed:gmatch("[^ ]+") do
				table.insert(args,arg)
			end
			cmd.run(args)
		end
	end)
end

local connections={}

lib.connect=function(name,connection)	--no :(
	connections[name..tostring(math.random(1000000,9999999))]=connection
	return connection
end

lib.disconnect=function(name)
	for title,connection in pairs(connections) do
		if title:find(name)==1 then
			connection:Disconnect()
		end
	end
end

local m=math			--prepare for annoying and unnecessary tool grip math
local rad=m.rad
local clamp=m.clamp
local sin=m.sin
local tan=m.tan
local cos=m.cos

--[[ PLAYER FUNCTIONS ]]--
local argument={}
argument.getPlayers=function(str)
	local playerNames,players=lib.parseText(str,opt.tupleSeparator),{}
	for _,arg in pairs(playerNames or {"me"}) do
		arg=arg:lower()
		local playerList=Players:GetPlayers()
		if arg=="me" or arg==nil then
			table.insert(players,localPlayer)

		elseif arg=="all" then
			for _,plr in pairs(playerList) do
				table.insert(players,plr)
			end

		elseif arg=="others" then
			for _,plr in pairs(playerList) do
				if plr~=localPlayer then
					table.insert(players,plr)
				end
			end

		elseif arg=="random" then
			table.insert(players,playerList[math.random(1,#playerList)])

		elseif arg:find("%%")==1 then
			local teamName=arg:sub(2)
			for _,plr in pairs(playerList) do
				if tostring(plr.Team):lower():find(teamName)==1 then
					table.insert(players,plr)
				end
			end

		else
			for _,plr in pairs(playerList) do
				if plr.Name:lower():find(arg)==1 or (plr.DisplayName and plr.DisplayName:lower():find(arg)==1) or (tostring(plr.UserId):lower():find(arg)==1) then
					table.insert(players,plr)
				end
			end
		end
	end
	return players
end

--[[ COMMANDS ]]--

cmd.add({"url"},{"url <link>","Run the script using url"},function(...)
	local args={...}
	local code=""

	for i,v in ipairs(args) do
		if i>1 then
			code=code.." "..v
		else
			code=v
		end
	end
	loadstring(game:HttpGet(code))()
end)

cmd.add({"loadstring","ls"},{"loadstring <code> (ls)","Run the code using the loadstring"},function(...)
	local args={...}
	local code=""

	for i,v in ipairs(args) do
		if i>1 then
			code=code.." "..v
		else
			code=v
		end
	end
	assert(loadstring(code))()
end)

cmd.add({"executor","exec"},{"executor (exec)","Very simple executor"},function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/Nameless-Admin/main/NAexecutor.lua"))()
end)

cmd.add({"scripthub","hub"},{"scripthub (hub)","Thanks to scriptblox api"},function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/Nameless-Admin/main/ScriptHubNA.lua"))()
end)

cmd.add({"stand"},{"stand <player>","Makes a player your stand"},function(...)
	Username=(...)

	local target=getPlr(Username)
	local THumanoidPart
	local plrtorso
	local TargetCharacter=target.Character
	if TargetCharacter:FindFirstChild("Torso") then
		plrtorso=TargetCharacter.Torso
	elseif TargetCharacter:FindFirstChild("UpperTorso") then
		plrtorso=TargetCharacter.UpperTorso
	end
	local old=getChar().HumanoidRootPart.CFrame
	local tool=getBp():FindFirstChildOfClass("Tool") or getChar():FindFirstChildOfClass("Tool")
	if target==nil or tool==nil then return end
	local attWeld=attachTool(tool,CFrame.new(0,0,0))
	attachTool(tool,CFrame.new(0,0,0.2)*CFrame.Angles(math.rad(-90),0,0))
	tool.Grip=plrtorso.CFrame
	wait(0.07)
	tool.Grip=CFrame.new(0,3,-1) 
	firetouchinterest(target.Character.Humanoid.RootPart,tool.Handle,0)
	firetouchinterest(target.Character.Humanoid.RootPart,tool.Handle,1)
	wait(1.3)
end)

cmd.add({"valk"},{"valk","Only works on dollhouse"},function()
	repeat game:GetService("RunService").Stepped:wait()
	until game:IsLoaded() and game:GetService("Players").LocalPlayer

	pcall(function()
		local plr=game:GetService("Players").LocalPlayer
		local giver=workspace:WaitForChild("Valkyrie Helm giver")

		local head=plr.Character:WaitForChild("Head")
		firetouchinterest(head,giver,0)

		plr.CharacterAdded:Connect(function(char)
			head=char:WaitForChild("Head")
			firetouchinterest(head,giver,0)
		end)
	end)
end)

cmd.add({"resizechat","rc"},{"resizechat (rc)","Makes chat resizable and draggable"},function()
	require(game:GetService("Chat").ClientChatModules.ChatSettings).WindowResizable=true
	require(game:GetService("Chat").ClientChatModules.ChatSettings).WindowDraggable=true
end)

local alreadyantilag=false
cmd.add({"lag"},{"lag <player>","Chat lag"},function()

	local Message="a" 
	local Unicode="‚Ää"
	Message=Message..Unicode:rep(200-#Message)

	local SayMessageRequest=game:GetService("ReplicatedStorage"):FindFirstChild("SayMessageRequest",true)

	for i=1,7 do
		SayMessageRequest:FireServer(Message,"All")
	end

	if alreadyantilag==false then
		local Players=game:GetService("Players")

		local Player=Players.LocalPlayer
		local PlayerGui=Player.PlayerGui

		local Chat=PlayerGui:FindFirstChild("Chat") 
		local MessageDisplay=Chat and Chat:FindFirstChild("Frame_MessageLogDisplay",true)
		local Scroller=MessageDisplay and MessageDisplay:FindFirstChild("Scroller")

		local Gsub=string.gsub
		local Lower=string.lower

		if not Scroller then return end

		for _,x in next,Scroller:GetChildren() do
			local MessageTextLabel=x:FindFirstChildWhichIsA("TextLabel")

			if MessageTextLabel then
				local Message=Gsub(MessageTextLabel.Text,"^%s+","")

				if Message:match("‚Ää") then
					x:Destroy()
				end
			end
		end

		local ChatAdded=Scroller.ChildAdded:Connect(function(x)
			local MessageTextLabel=x:FindFirstChildWhichIsA("TextLabel")
			local SenderTextButton=MessageTextLabel and MessageTextLabel:FindFirstChildWhichIsA("TextButton")
			if MessageTextLabel and SenderTextButton then
				repeat task.wait() until not MessageTextLabel.Text:match("__+")
				local Message=Gsub(MessageTextLabel.Text,"^%s+","")

				if Message:match("‚Ää") then
					x:Destroy()
				end
			end
		end)
		alreadyantilag=true
	else
	end
end)

	--[[cmd.add({"plugins"},{"plugins","Check what kind of plugins you have,add plugins using a gui,delete a plugin."},function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/Nameless-Admin/main/NamelessAdminPlugin"))();
	end)]]

cmd.add({"prefix"},{"prefix <prefix>","Changes the admin prefix"},function(...)
	local PrefixChange=(...)

	if PrefixChange==nil then
		Notify({
			Description="Please enter a valid prefix";
			Title=adminName;
			Duration=5;

		});
	elseif PrefixChange=="p" or PrefixChange=="[" or PrefixChange=="P" then
		Notify({
			Description="idk why but this prefix breaks changing the prefix so pick smthing else alr?";
			Title=adminName;
			Duration=5;

		});
	else
		opt.prefix=PrefixChange
		Notify({
			Description="Prefix set to: "..PrefixChange;
			Title=adminName;
			Duration=5;

		});
	end
end)


cmd.add({"saveprefix"},{"saveprefix <prefix>","Saves the prefix to what u want"},function(...)
	if not FileSupport then return end
	local PrefixChange=(...)

	if PrefixChange==nil then
		Notify({
			Description="Please enter a valid prefix";
			Title=adminName;
			Duration=5;

		});
	elseif PrefixChange=="p" or PrefixChange=="[" or PrefixChange=="P" then
		Notify({
			Description="idk why but this prefix breaks changing the prefix so pick smthing else alr?";
			Title=adminName;
			Duration=5;
		});
	else
		writefile("Nameless-Admin/Prefix.txt",PrefixChange)
		opt.prefix=PrefixChange
		Notify({
			Description="Prefix saved to: "..PrefixChange;
			Title=adminName;
			Duration=5;
		});
	end
end)

--[ UTILITY ]--

cmd.add({"chatlogs","clogs"},{"chatlogs (clogs)","Open the chat logs"},function()
	gui.chatlogs()
end)

cmd.add({"gotocampos","tocampos","tcp"},{"gotocampos (tocampos,tcp)","Teleports you to your camera position works with free cam but freezes you"},function()
	local player=game.Players.LocalPlayer
	local UserInputService=game:GetService("UserInputService")
	function teleportPlayer()
		local character=player.Character or player.CharacterAdded:wait(1)
		local camera=game.Workspace.CurrentCamera
		local cameraPosition=camera.CFrame.Position
		character:SetPrimaryPartCFrame(CFrame.new(cameraPosition))
	end
	local camera=game.Workspace.CurrentCamera
	repeat wait() until camera.CFrame~=CFrame.new()

	teleportPlayer()
end)

cmd.add({"kanye"},{"kanye","Random kanye quote"},function()
	local check="https://api.kanye.rest/"
	local final=game:HttpGet(check)
	local final2=string.gsub(final,'"quote"',"")
	local final3=string.gsub(final2,"[%{%:%}]","")
	lib.LocalPlayerChat(final3.."-Kanye West",'All')
end)

cmd.add({"godmode","god"},{"godmode (god)","Makes you unable to be killed"},function()
	loadstring(game:HttpGet(('https://pastebin.com/raw/bbyuynM1'),true))()
end)

cmd.add({"teleportgui","tpui","universeviewer","uviewer"},{"teleportgui (tpui,universeviewer,uviewer)","Gives an UI that grabs all places and teleports you by clicking a simple button"},function()
	--loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/uuuuuuu/main/Game%20Universe%20Viewer"))()
	gui.universeGui()
end)

cmd.add({"serverremotespy","srs","sremotespy"},{"serverremotespy (srs,sremotespy)","Gives an UI that logs all the remotes being called from the server (thanks SolSpy lol)"},function()
	loadstring(game:HttpGet("https://github.com/ltseverydayyou/uuuuuuu/blob/main/Server%20Spy.lua?raw=spy"))()
end)

cmd.add({"updatelog","updlog","updates"},{"updatelog (updlog,updates)","show the update logs for Nameless Admin"},function()
	--loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/uuuuuuu/main/Game%20Universe%20Viewer"))()
	gui.updateLogs()
end)

cmd.add({"discord"},{"discord","Copy an invite link to the official Nameless Admin V2 discord server"},function()
	if setclipboard then 
		setclipboard('https://discord.gg/zS7TpV3p64')
		Notify({
			Description='Copied the discord invite link!';
			Title=adminName;
			Duration=4;
		});
	else
		Notify({
			Description='Your exploit does not support setclipboard\nRetype the invite link yourself (https://discord.gg/zS7TpV3p64)';
			Title=adminName;
			Duration=10;
		});
	end
end)

cmd.add({"clickfling","mousefling"},{"mousefling (clickfling)","Fling a player by clicking them"},function()
	local Players=game:GetService("Players")
	local Mouse=game:GetService("Players").LocalPlayer:GetMouse()

	Mouse.Button1Down:Connect(function()
		local Target=Mouse.Target
		if Target and Target.Parent and Target.Parent:IsA("Model") and Players:GetPlayerFromCharacter(Target.Parent) then
			local PlayerName=Players:GetPlayerFromCharacter(Target.Parent).Name
			local player=game.Players.LocalPlayer
			local Targets={PlayerName}

			local Players=game:GetService("Players")
			local Player=Players.LocalPlayer

			local AllBool=false

			local GetPlayer=function(Name)
				Name=Name:lower()
				if Name=="all" or Name=="others" then
					AllBool=true
					return
				elseif Name=="random" then
					local GetPlayers=Players:GetPlayers()
					if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player)) end
					return GetPlayers[math.random(#GetPlayers)]
				elseif Name~="random" and Name~="all" and Name~="others" then
					for _,x in next,Players:GetPlayers() do
						if x~=Player then
							if x.Name:lower():match("^"..Name) then
								return x;
							elseif x.DisplayName:lower():match("^"..Name) then
								return x;
							end
						end
					end
				else
					return
				end
			end

			local Message=function(_Title,_Text,Time)
				print(_Title)
				print(_Text)
				print(Time)
			end

			local SkidFling=function(TargetPlayer)
				local Character=Player.Character
				local Humanoid=Character and Character:FindFirstChildOfClass("Humanoid")
				local RootPart=Humanoid and Humanoid.RootPart

				local TCharacter=TargetPlayer.Character
				local THumanoid
				local TRootPart
				local THead
				local Accessory
				local Handle

				if TCharacter:FindFirstChildOfClass("Humanoid") then
					THumanoid=TCharacter:FindFirstChildOfClass("Humanoid")
				end
				if THumanoid and THumanoid.RootPart then
					TRootPart=THumanoid.RootPart
				end
				if TCharacter:FindFirstChild("Head") then
					THead=TCharacter.Head
				end
				if TCharacter:FindFirstChildOfClass("Accessory") then
					Accessory=TCharacter:FindFirstChildOfClass("Accessory")
				end
				if Accessoy and Accessory:FindFirstChild("Handle") then
					Handle=Accessory.Handle
				end

				if Character and Humanoid and RootPart then
					if RootPart.Velocity.Magnitude<50 then
						getgenv().OldPos=RootPart.CFrame
					end
					if THumanoid and THumanoid.Sit and not AllBool then
					end
					if THead then
						workspace.CurrentCamera.CameraSubject=THead
					elseif not THead and Handle then
						workspace.CurrentCamera.CameraSubject=Handle
					elseif THumanoid and TRootPart then
						workspace.CurrentCamera.CameraSubject=THumanoid
					end
					if not TCharacter:FindFirstChildWhichIsA("BasePart") then
						return
					end

					local FPos=function(BasePart,Pos,Ang)
						RootPart.CFrame=CFrame.new(BasePart.Position)*Pos*Ang
						Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position)*Pos*Ang)
						RootPart.Velocity=Vector3.new(9e7,9e7*10,9e7)
						RootPart.RotVelocity=Vector3.new(9e8,9e8,9e8)
					end

					local SFBasePart=function(BasePart)
						local TimeToWait=2
						local Time=tick()
						local Angle=0

						repeat
							if RootPart and THumanoid then
								if BasePart.Velocity.Magnitude<50 then
									Angle=Angle+100

									FPos(BasePart,CFrame.new(0,1.5,0)+THumanoid.MoveDirection*BasePart.Velocity.Magnitude / 1.25,CFrame.Angles(math.rad(Angle),0,0))
									task.wait()

									FPos(BasePart,CFrame.new(0,-1.5,0)+THumanoid.MoveDirection*BasePart.Velocity.Magnitude / 1.25,CFrame.Angles(math.rad(Angle),0,0))
									task.wait()

									FPos(BasePart,CFrame.new(2.25,1.5,-2.25)+THumanoid.MoveDirection*BasePart.Velocity.Magnitude / 1.25,CFrame.Angles(math.rad(Angle),0,0))
									task.wait()

									FPos(BasePart,CFrame.new(-2.25,-1.5,2.25)+THumanoid.MoveDirection*BasePart.Velocity.Magnitude / 1.25,CFrame.Angles(math.rad(Angle),0,0))
									task.wait()

									FPos(BasePart,CFrame.new(0,1.5,0)+THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle),0,0))
									task.wait()

									FPos(BasePart,CFrame.new(0,-1.5,0)+THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle),0,0))
									task.wait()
								else
									FPos(BasePart,CFrame.new(0,1.5,THumanoid.WalkSpeed),CFrame.Angles(math.rad(90),0,0))
									task.wait()

									FPos(BasePart,CFrame.new(0,-1.5,-THumanoid.WalkSpeed),CFrame.Angles(0,0,0))
									task.wait()

									FPos(BasePart,CFrame.new(0,1.5,THumanoid.WalkSpeed),CFrame.Angles(math.rad(90),0,0))
									task.wait()

									FPos(BasePart,CFrame.new(0,1.5,TRootPart.Velocity.Magnitude / 1.25),CFrame.Angles(math.rad(90),0,0))
									task.wait()

									FPos(BasePart,CFrame.new(0,-1.5,-TRootPart.Velocity.Magnitude / 1.25),CFrame.Angles(0,0,0))
									task.wait()

									FPos(BasePart,CFrame.new(0,1.5,TRootPart.Velocity.Magnitude / 1.25),CFrame.Angles(math.rad(90),0,0))
									task.wait()

									FPos(BasePart,CFrame.new(0,-1.5,0),CFrame.Angles(math.rad(90),0,0))
									task.wait()

									FPos(BasePart,CFrame.new(0,-1.5,0),CFrame.Angles(0,0,0))
									task.wait()

									FPos(BasePart,CFrame.new(0,-1.5,0),CFrame.Angles(math.rad(-90),0,0))
									task.wait()

									FPos(BasePart,CFrame.new(0,-1.5,0),CFrame.Angles(0,0,0))
									task.wait()
								end
							else
								break
							end
						until BasePart.Velocity.Magnitude>500 or BasePart.Parent~=TargetPlayer.Character or TargetPlayer.Parent~=Players or not TargetPlayer.Character==TCharacter or THumanoid.Sit or Humanoid.Health <=0 or tick()>Time+TimeToWait
					end

					workspace.FallenPartsDestroyHeight=0/0

					local BV=Instance.new("BodyVelocity")
					BV.Name="EpixVel"
					BV.Parent=RootPart
					BV.Velocity=Vector3.new(9e8,9e8,9e8)
					BV.MaxForce=Vector3.new(1/0,1/0,1/0)

					Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)

					if TRootPart and THead then
						if (TRootPart.CFrame.p-THead.CFrame.p).Magnitude>5 then
							SFBasePart(THead)
						else
							SFBasePart(TRootPart)
						end
					elseif TRootPart and not THead then
						SFBasePart(TRootPart)
					elseif not TRootPart and THead then
						SFBasePart(THead)
					elseif not TRootPart and not THead and Accessory and Handle then
						SFBasePart(Handle)
					else
					end

					BV:Destroy()
					Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
					workspace.CurrentCamera.CameraSubject=Humanoid

					repeat
						RootPart.CFrame=getgenv().OldPos*CFrame.new(0,.5,0)
						Character:SetPrimaryPartCFrame(getgenv().OldPos*CFrame.new(0,.5,0))
						Humanoid:ChangeState("GettingUp")
						table.foreach(Character:GetChildren(),function(_,x)
							if x:IsA("BasePart") then
								x.Velocity,x.RotVelocity=Vector3.new(),Vector3.new()
							end
						end)
						task.wait()
					until (RootPart.Position-getgenv().OldPos.p).Magnitude<25
					workspace.FallenPartsDestroyHeight=getgenv().FPDH
				else
				end
			end

			getgenv().Welcome=true
			if Targets[1] then for _,x in next,Targets do GetPlayer(x) end else return end

			if AllBool then
				for _,x in next,Players:GetPlayers() do
					SkidFling(x)
				end
			end

			for _,x in next,Targets do
				if GetPlayer(x) and GetPlayer(x)~=Player then
					if GetPlayer(x).UserId~=1414978355 then
						local TPlayer=GetPlayer(x)
						if TPlayer then
							SkidFling(TPlayer)
						end
					else
					end
				elseif not GetPlayer(x) and not AllBool then
				end
			end
		end
	end)
end)

cmd.add({"ping"},{"ping","Shows your ping"},function()
	local Ping=Instance.new("ScreenGui")
	local Pingtext=Instance.new("TextLabel")
	local UICorner=Instance.new("UICorner")
	local UIAspectRatioConstraint=Instance.new("UIAspectRatioConstraint")

	Ping.Name="Ping"
	Ping.Parent=gethui()
	Ping.ZIndexBehavior=Enum.ZIndexBehavior.Sibling
	Ping.ResetOnSpawn=false

	Pingtext.Name="Pingtext"
	Pingtext.Parent=Ping
	Pingtext.BackgroundColor3=Color3.fromRGB(12,4,20)
	Pingtext.BackgroundTransparency=0.140
	Pingtext.Position=UDim2.new(0,0,0,48)
	Pingtext.Size=UDim2.new(0,201,0,35)
	Pingtext.Font=Enum.Font.SourceSans
	Pingtext.Text="FPS:"
	Pingtext.TextColor3=Color3.fromRGB(255,255,255)
	Pingtext.TextScaled=true
	Pingtext.TextSize=14.000
	Pingtext.TextWrapped=true

	UICorner.CornerRadius=UDim.new(1,0)
	UICorner.Parent=Pingtext

	UIAspectRatioConstraint.Parent=Pingtext
	UIAspectRatioConstraint.AspectRatio=5.743

	local script=Instance.new('LocalScript',Pingtext)
	local RunService=game:GetService("RunService")
	RunService.RenderStepped:Connect(function(ping) 
		script.Parent.Text=("Ping: " ..game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString(math.round(2/ping)))--your ping
	end)
	gui.draggablev2(Pingtext)
end)

cmd.add({"fps"},{"fps","Shows your fps"},function()
	local Fps=Instance.new("ScreenGui")
	local Fpstext=Instance.new("TextLabel")
	local UICorner=Instance.new("UICorner")
	local UIAspectRatioConstraint=Instance.new("UIAspectRatioConstraint")

	Fps.Name="Fps"
	Fps.Parent=gethui()
	Fps.ZIndexBehavior=Enum.ZIndexBehavior.Sibling
	Fps.ResetOnSpawn=false

	Fpstext.Name="Fpstext"
	Fpstext.Parent=Fps
	Fpstext.BackgroundColor3=Color3.fromRGB(12,4,20)
	Fpstext.BackgroundTransparency=0.140
	Fpstext.Position=UDim2.new(0,0,0,6)
	Fpstext.Size=UDim2.new(0,201,0,35)
	Fpstext.Font=Enum.Font.SourceSans
	Fpstext.Text="FPS:"
	Fpstext.TextColor3=Color3.fromRGB(255,255,255)
	Fpstext.TextScaled=true
	Fpstext.TextSize=14.000
	Fpstext.TextWrapped=true

	UICorner.CornerRadius=UDim.new(1,0)
	UICorner.Parent=Fpstext

	UIAspectRatioConstraint.Parent=Fpstext
	UIAspectRatioConstraint.AspectRatio=5.743

	local script=Instance.new('LocalScript',Fpstext)
	local RunService=game:GetService("RunService")
	RunService.RenderStepped:Connect(function(frame) 
		script.Parent.Text=("FPS: "..math.round(1/frame)) 
	end)
	gui.draggablev2(Fpstext)
end)

cmd.add({"commands","cmds"},{"commands (cmds)","Open the command list"},function()
	gui.commands()
end)

cmd.add({"adonisfinder","adfind"},{"adonis finder (adfind)","Lets you see if the game has adonis admin"},function()
	loadstring(game:HttpGet("https://github.com/ltseverydayyou/Nameless-Admin/blob/main/AdonisScanner.lua?raw=adonfind"))()
end)
--Mobile Commands for the screen
if IsOnMobile then

	cmd.add({"SensorRotationScreen","SensorScreen","SenScreen"},{"SensorRotaionScreen (SensorScreen or SenScreen)","Changes ScreenOrientation to Sensor"},function()
		game.Players.LocalPlayer.PlayerGui.ScreenOrientation=Enum.ScreenOrientation.Sensor
	end)

	cmd.add({"LandscapeRotationScreen","LandscapeScreen","LandScreen"},{"LandscapeRotaionScreen (LandscapeScreen or LandScreen)","Changes ScreenOrientation to Landscape Sensor"},function()
		game.Players.LocalPlayer.PlayerGui.ScreenOrientation=Enum.ScreenOrientation.LandscapeSensor
	end)

	cmd.add({"PortraitRotationScreen","PortraitScreen","Portscreen"},{"PortraitRotaionScreen (PortraitScreen or Portscreen)","Changes ScreenOrientation to Portrait"},function()
		game.Players.LocalPlayer.PlayerGui.ScreenOrientation=Enum.ScreenOrientation.Portrait
	end)

	cmd.add({"DefaultRotaionScreen","DefaultScreen","Defscreen"},{"DefaultRotaionScreen (DefaultScreen or Defscreen)","Changes ScreenOrientation to Portrait"},function()
		game.Players.LocalPlayer.PlayerGui.ScreenOrientation=game.StarterGui.ScreenOrientation 
	end)

end
cmd.add({"commandcount","cc"},{"commandcount (cc)","Counds how many commands NA has"},function()

	Notify({
		Description=adminName.." currently has ".. commandcount.." commands";
		Title=adminName;
		Duration=5;

	});
end)

local hiddenfling=false
cmd.add({"walkfling","wfling"},{"walkfling (wfling) [THANKS TO X]","probably the best fling lol"},function()
	Notify({
		Description="Walkfling enabled";
		Title=adminName;
		Duration=5;

	});
	if NA_storage:FindFirstChild("juisdfj0i32i0eidsuf0iok") then
		hiddenfling=true
	else
		hiddenfling=true
		detection=Instance.new("Decal")
		detection.Name="juisdfj0i32i0eidsuf0iok"
		detection.Parent=NA_storage
		function fling()
			local hrp,c,vel,movel=nil,nil,nil,0.1
			while true do
				RunService.Heartbeat:Wait()
				if hiddenfling then
					local lp=game.Players.LocalPlayer
					while hiddenfling and not (c and c.Parent and hrp and hrp.Parent) do
						RunService.Heartbeat:Wait()
						c=lp.Character
						hrp=c:FindFirstChild("HumanoidRootPart") or c:FindFirstChild("Torso") or c:FindFirstChild("UpperTorso")
					end
					if hiddenfling then
						vel=hrp.Velocity
						hrp.Velocity=vel*10000+Vector3.new(0,10000,0)
						RunService.RenderStepped:Wait()
						if c and c.Parent and hrp and hrp.Parent then
							hrp.Velocity=vel
						end
						game:GetService("RunService").Stepped:Wait()
						if c and c.Parent and hrp and hrp.Parent then
							hrp.Velocity=vel+Vector3.new(0,movel,0)
							movel=movel*-1
						end
					end
				end
			end
		end

		fling()
	end
end)

cmd.add({"unwalkfling","unwfling"},{"unwalkfling (unwfling)","stop the walkfling command"},function()
	Notify({
		Description="Walkfling disabled";
		Title=adminName;
		Duration=5;

	});
	hiddenfling=false
end)

cmd.add({"fling3"},{"fling3 <player>","another variant of fling"},function(...)
	oldcframe=getRoot(Players.LocalPlayer.Character).CFrame

	User=(...)
	Target=getPlr(User)

	hiddenfling=true

	if NA_storage:FindFirstChild("juisdfj0i32i0eidsuf0iok") then
		hiddenfling=true
	else
		detection=Instance.new("Decal")
		detection.Name="juisdfj0i32i0eidsuf0iok"
		detection.Parent=NA_storage
		function fling()
			local hrp,c,vel,movel=nil,nil,nil,0.1
			while true do
				RunService.Heartbeat:Wait()
				if hiddenfling then
					local lp=game.Players.LocalPlayer
					while hiddenfling and not (c and c.Parent and hrp and hrp.Parent) do
						RunService.Heartbeat:Wait()
						c=lp.Character
						hrp=c:FindFirstChild("HumanoidRootPart") or c:FindFirstChild("Torso") or c:FindFirstChild("UpperTorso")
					end
					if hiddenfling then
						vel=hrp.Velocity
						hrp.Velocity=vel*10000+Vector3.new(0,10000,0)
						RunService.RenderStepped:Wait()
						if c and c.Parent and hrp and hrp.Parent then
							hrp.Velocity=vel
						end
						game:GetService("RunService").Stepped:Wait()
						if c and c.Parent and hrp and hrp.Parent then
							hrp.Velocity=vel+Vector3.new(0,movel,0)
							movel=movel*-1
						end
					end
				end
			end
		end
		fling()
	end
	Player.Character.Humanoid:SetStateEnabled("Seated",false)
	Player.Character.Humanoid.Sit=true
	if User=="all" or User=="others" then
		for _,x in next,game.Players:GetPlayers() do
			for i=1,10 do
				wait(0.017)
				getRoot(game.Players.LocalPlayer.Character).CFrame=getRoot(x.Character).CFrame*CFrame.new(0,0,4)
				wait(0.01)
				getRoot(game.Players.LocalPlayer.Character).CFrame=getRoot(x.Character).CFrame*CFrame.new(0,0,-2)
				wait(0.01)
				getRoot(game.Players.LocalPlayer.Character).CFrame=getRoot(x.Character).CFrame
				wait(0.01)
				getRoot(game.Players.LocalPlayer.Character).CFrame=getRoot(x.Character).CFrame*CFrame.new(0,0,-3)
				wait(0.01)
				getRoot(game.Players.LocalPlayer.Character).CFrame=getRoot(x.Character).CFrame*CFrame.new(0,0,2)
				wait(0.01)
				getRoot(game.Players.LocalPlayer.Character).CFrame=getRoot(x.Character).CFrame
				wait(0.01)
				getRoot(game.Players.LocalPlayer.Character).CFrame=getRoot(x.Character).CFrame*CFrame.new(0,0,-1)
				wait(0.01)
				getRoot(game.Players.LocalPlayer.Character).CFrame=getRoot(x.Character).CFrame*CFrame.new(0,0,-1)
			end
		end
	else
		for i=1,10 do
			wait(0.017)
			getRoot(Players.LocalPlayer.Character).CFrame=getRoot(Target.Character).CFrame*CFrame.new(0,0,4)
			wait(0.01)
			getRoot(Players.LocalPlayer.Character).CFrame=getRoot(Target.Character).CFrame*CFrame.new(0,0,-2)
			wait(0.01)
			getRoot(Players.LocalPlayer.Character).CFrame=getRoot(Target.Character).CFrame
			wait(0.01)
			getRoot(Players.LocalPlayer.Character).CFrame=getRoot(Target.Character).CFrame*CFrame.new(0,0,-3)
			wait(0.01)
			getRoot(Players.LocalPlayer.Character).CFrame=getRoot(Target.Character).CFrame*CFrame.new(0,0,2)
			wait(0.01)
			getRoot(Players.LocalPlayer.Character).CFrame=getRoot(Target.Character).CFrame
			wait(0.01)
			getRoot(Players.LocalPlayer.Character).CFrame=getRoot(Target.Character).CFrame*CFrame.new(0,0,-1)
			wait(0.01)
			getRoot(Players.LocalPlayer.Character).CFrame=getRoot(Target.Character).CFrame*CFrame.new(0,0,-1)
		end
	end
	sFLY(true)
	speedofthevfly=1
	wait(0.3)
	getRoot(Players.LocalPlayer.Character).CFrame=oldcframe
	wait(0.13)
	Player.Character.Humanoid:SetStateEnabled("Seated",true)
	Player.Character.Humanoid.Sit=false
	FLYING=false
	game.Players.LocalPlayer.Character.Humanoid.PlatformStand=false
	hiddenfling=false
end)

cmd.add({"rjre","rejoinrefresh"},{"rjre (rejoinrefresh)","Rejoins and teleports you to the position where you were before"},function()

	queueteleport=(syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)


	if not DONE then
		DONE=true
		local qot=print("a")
		local hrp=game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
		if hrp then
			qot="task.spawn(function() end) repeat wait() until game and game:IsLoaded() local lp=game:GetService('Players').LocalPlayer local char=lp.Character or lp.CharacterAdded:Wait() repeat char:WaitForChild('HumanoidRootPart').CFrame=CFrame.new("..tostring(hrp.CFrame)..") wait() until (Vector3.new("..tostring(hrp.Position)..")-char:WaitForChild('HumanoidRootPart').Position).Magnitude<10"
		end
		queueteleport(qot)
		if #game.Players:GetPlayers() <=1 then
			game.Players.LocalPlayer:Kick("Rejoining...")
			wait()
			game:GetService("TeleportService"):TeleportCancel()
			game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceId,JobId,game.Players.LocalPlayer)
		else
			game:GetService("TeleportService"):TeleportCancel()
			game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceId,JobId,game.Players.LocalPlayer)
		end
	end
end)

cmd.add({"rejoin","rj"},{"rejoin (rj)","Rejoin the game"},function()
	if #game.Players:GetPlayers() <=1 then
		game.Players.LocalPlayer:Kick("Rejoining...")
		wait()
		game:GetService("TeleportService"):Teleport(PlaceId)
	else
		game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceId,JobId,game.Players.LocalPlayer)
	end



	wait();

	Notify({
		Description="Rejoining...";
		Title=adminName;
		Duration=5;
	});
end)

cmd.add({"teleporttoplace","toplace","ttp"},{"teleporttoplace (PlaceId) (toplace,ttp)","Teleports you using PlaceId"},function(...)
	args={...}
	pId=tonumber(args[1])
	game:GetService("TeleportService"):Teleport(pId)
end)

--fixed-viper
cmd.add({"adonisbypass","bypassadonis","badonis","adonisb"},{"adonisbypass (bypassadonis,badonis,adonisb)","bypasses adonis admin detection"},function()
	loadstring(game:HttpGet("https://github.com/ltseverydayyou/Nameless-Admin/blob/main/adonisbypass.lua?raw=true"))()
end)

--[ LOCALPLAYER ]--
function respawn()
	cf=getRoot(game.Players.LocalPlayer.Character).CFrame
	game.Players.LocalPlayer.Character.Humanoid.Health=0
	player.CharacterAdded:wait(1); wait(0.2);
	character:WaitForChild("HumanoidRootPart").CFrame=cf
end

function refresh()
	cf=getRoot(game.Players.LocalPlayer.Character).CFrame
	game.Players.LocalPlayer.Character.Humanoid.Health=0
	player.CharacterAdded:wait(1); wait(0.2);
	character:WaitForChild("HumanoidRootPart").CFrame=cf
end

local abort=0
function getTools(amt)
	if not amt then amt=1 end
	local toolAmount,grabbed=0,{}
	local lastCF=character.PrimaryPart.CFrame
	local ab=abort

	for i,v in pairs(localPlayer:FindFirstChildWhichIsA("Backpack"):GetChildren()) do
		if v:IsA("BackpackItem") then
			toolAmount=toolAmount+1
		end
	end
	if toolAmount >=amt then return localPlayer:FindFirstChildWhichIsA("Backpack"):GetChildren() end
	if not localPlayer:FindFirstChildWhichIsA("Backpack"):FindFirstChildWhichIsA("BackpackItem") then return end

	repeat
		repeat wait() until localPlayer:FindFirstChildWhichIsA("Backpack") or ab~=abort
		backpack=localPlayer:FindFirstChildWhichIsA("Backpack")
		wrap(function()
			repeat wait() until backpack:FindFirstChildWhichIsA("BackpackItem")
			for _,tool in pairs(backpack:GetChildren()) do
				if #grabbed >=amt or ab~=abort then break end
				if tool:IsA("BackpackItem") then
					tool.Parent=localPlayer
					table.insert(grabbed,tool)
				end
			end
		end)

		respawn()
		wait(.1)
	until
	#grabbed >=amt or ab~=abort

	repeat wait() until localPlayer.Character and tostring(localPlayer.Character)~="respawn_" and localPlayer.Character==character
	wait(.2)

	repeat wait() until localPlayer:FindFirstChildWhichIsA("Backpack") or ab~=abort
	local backpack=localPlayer:FindFirstChildWhichIsA("Backpack")
	for _,tool in pairs(grabbed) do
		if tool:IsA("BackpackItem") then
			tool.Parent=backpack
		end
	end
	wrap(function()
		repeat wait() until character.PrimaryPart
		wait(.2)
		character:SetPrimaryPartCFrame(lastCF)
	end)
	wait(.2)
	return grabbed
end



cmd.add({"joke"},{"joke","Random joke generator"},function()
	coroutine.wrap(function()
		local HttpService=game:GetService('HttpService')
		local check="https://official-joke-api.appspot.com/jokes/programming/random"
		local final1=game:HttpGet(check)
		local final=string.gsub(final1,"[%[%]]","")
		local decoded=HttpService:JSONDecode(final)
		lib.LocalPlayerChat(decoded.setup,'All')
		wait(2)
		lib.LocalPlayerChat(decoded.punchline,'All')
	end)()

end)
cmd.add({"idiot"},{"idiot <player>","Tell someone that they are an idiot"},function(...)
	local old=getChar().HumanoidRootPart.CFrame

	Username=(...)

	Players=game:GetService("Players")
	HRP=getRoot(game.Players.LocalPlayer.Character).Anchored


	target=getPlr(Username)

	getChar().HumanoidRootPart.CFrame=target.Character.Humanoid.RootPart.CFrame*CFrame.new(0,1,4)
	local message="Hey "..target.Name..""
	lib.LocalPlayerChat(message,'All')
	wait(1)
	lib.LocalPlayerChat('Sorry to tell you this,but..','All')
	wait(1)
	lib.LocalPlayerChat('You are an idiot!','All')
	wait(1)
	lib.LocalPlayerChat('HAHAHA!','All')
	wait(1)
	getChar():WaitForChild("HumanoidRootPart").CFrame=old


end)

cmd.add({"bringto"},{"bringto (playertobring) [playertobringto]","Brings a player to another player"},function(h,d)
	local target1=getPlr(h)
	local target2=getPlr(d)

	local old=getChar().HumanoidRootPart.CFrame
	local tool=getBp():FindFirstChildOfClass("Tool") or getChar():FindFirstChildOfClass("Tool")

	local distance=1
	local gripPosition=getRoot(target2.Character).Position-getRoot(target2.Character).CFrame.lookVector*distance
	wait(0.2)

	local Target=target1
	local Character=Player.Character        
	local PlayerGui=Player:waitForChild("PlayerGui")
	local Backpack=Player:waitForChild("Backpack")
	local Humanoid=Character and Character:FindFirstChildWhichIsA("Humanoid") or false
	local RootPart=Character and Humanoid and Humanoid.RootPart or false
	local RightArm=Character and Character:FindFirstChild("Right Arm") or Character:FindFirstChild("RightHand")
	if not Humanoid or not RootPart or not RightArm then
		return
	end
	Humanoid:UnequipTools()
	local MainTool=Backpack:FindFirstChildWhichIsA("Tool") or false
	if not MainTool or not MainTool:FindFirstChild("Handle") then
		return
	end
	local TPlayer=getPlr(Target)
	local TCharacter=TPlayer and TPlayer.Character
	local THumanoid=TCharacter and TCharacter:FindFirstChildWhichIsA("Humanoid") or false
	local TRootPart=TCharacter and THumanoid and THumanoid.RootPart or false
	if not THumanoid or not TRootPart then
		return
	end
	Character.Humanoid.Name="DAttach"
	local l=Character["DAttach"]:Clone()
	l.Parent=Character
	l.Name="Humanoid"
	wait()
	Character["DAttach"]:Destroy()
	game.Workspace.CurrentCamera.CameraSubject=Character
	Character.Animate.Disabled=true
	wait()
	Character.Animate.Disabled=false
	Character.Humanoid:EquipTool(MainTool)
	wait()
	CF=Player.Character.PrimaryPart.CFrame
	if firetouchinterest then
		local flag=false
		task.defer(function()
			MainTool.Handle.AncestryChanged:wait()
			flag=true
		end)
		repeat
			firetouchinterest(MainTool.Handle,TRootPart,0)
			firetouchinterest(MainTool.Handle,TRootPart,1)
			wait()
			getRoot(Player.Character).CFrame=CF
		until flag
	else
		getRoot(Player.Character).CFrame=
			getRoot(TCharacter).CFrame
		wait()
		getRoot(Player.Character).CFrame=
			getRoot(TCharacter).CFrame
		wait()
		getRoot(Player.Character).CFrame=CF
		wait()
	end
	wait(.3)
	Player.Character:SetPrimaryPartCFrame(CF)
	if Humanoid.RigType==Enum.HumanoidRigType.R6 then
		Character["Right Arm"].RightGrip:Destroy()
	else
		Character["RightHand"].RightGrip:Destroy()
		Character["RightHand"].RightGripAttachment:Destroy()
	end

	wait(4)
	CF=getRoot(Player.Character).CFrame
	player.CharacterAdded:wait(1):waitForChild("HumanoidRootPart").CFrame=CF

	getChar().HumanoidRootPart.CFrame=CFrame.new(gripPosition)+Vector3.new(0,3,0)

	local tween=game:GetService("TweenService"):Create(getChar().HumanoidRootPart,TweenInfo.new(1),{CFrame=getRoot(target2.Character).CFrame})
	tween:Play()

	tool.AncestryChanged:Wait() 
	if plr.Character.Humanoid.RigType==Enum.HumanoidRigType.R6 then
		--plr.Character["Right Arm"]:Destroy()
		game.Players.LocalPlayer.Character["Right Arm"].RightGrip:Destroy()--r6
	elseif plr.Character.Humanoid.RigType==Enum.HumanoidRigType.R15 then
		--plr.Character["RightHand"]:Destroy()
		game.Players.LocalPlayer.Character.RightHand.RightGrip:Destroy()--r15
	end
	wait(0.07)
	respawn()
end)

cmd.add({"accountage","accage"},{"accountage <player> (accage)","Tells the account age of a player in the server"},function(...)
	Username=(...)

	target=getPlr(Username)
	teller=target.AccountAge
	accountage="The account age of "..target.Name.." is "..teller





	wait();

	Notify({
		Description=accountage;
		Title=adminName;
		Duration=7;

	});
end)

cmd.add({"notoolscripts","nts"},{"notoolscripts (nts)","Destroy all scripts in backpack"},function()
	print("test")
	local bp=player:FindFirstChildWhichIsA("Backpack")
	for _,item in pairs(bp:GetChildren()) do
		for _,obj in pairs(item:GetDescendants()) do
			if obj:IsA("LocalScript") or obj:IsA("Script") then
				obj.Disabled=true
				obj:Destroy()
			end
		end
	end
end)

cmd.add({"spblockspam","starterblockscam"},{"spblockspam (starterblockspam)","Spam blocks in any game that has the starter place"},function()
	anniblockspam=true
end)

cmd.add({"febtools"},{"febtools","Move parts that are your hats"},function()
	--[[ THANKS TO ROUXHAVER FOR THIS ]]--
	--check out his github-https://github.com/rouxhaver
	local Players=game:GetService("Players")
	local RunService=game:GetService("RunService")
	local LocalPlayer=Players.LocalPlayer

	if not getgenv().Network then
		getgenv().Network={
			BaseParts={};
			FakeConnections={};
			Connections={};
			Output={
				Enabled=true;
				Prefix="[NETWORK] ";
				Send=function(Type,Output,BypassOutput)
					if typeof(Type)=="function" and (Type==print or Type==warn or Type==error) and typeof(Output)=="string" and (typeof(BypassOutput)=="nil" or typeof(BypassOutput)=="boolean") then
						if Network["Output"].Enabled==true or BypassOutput==true then
							Type(Network["Output"].Prefix..Output);
						end;
					elseif Network["Output"].Enabled==true then
						error(Network["Output"].Prefix.."Output Send Error : Invalid syntax.");
					end;
				end;
			};
			CharacterRelative=false;
		}

		Network["Output"].Send(print,": Loading.")
		Network["Velocity"]=Vector3.new(14.46262424,14.46262424,14.46262424);--exactly 25.1 magnitude
		Network["RetainPart"]=function(Part,ReturnFakePart)--function for retaining ownership of unanchored parts
			assert(typeof(Part)=="Instance" and Part:IsA("BasePart") and Part:IsDescendantOf(workspace),Network["Output"].Prefix.."RetainPart Error : Invalid syntax: Arg1 (Part) must be a BasePart which is a descendant of workspace.")
			assert(typeof(ReturnFakePart)=="boolean" or typeof(ReturnFakePart)=="nil",Network["Output"].Prefix.."RetainPart Error : Invalid syntax: Arg2 (ReturnFakePart) must be a boolean or nil.")
			if not table.find(Network["BaseParts"],Part) then
				if Network.CharacterRelative==true then
					local Character=LocalPlayer.Character
					if Character and Character.PrimaryPart then
						local Distance=(Character.PrimaryPart.Position-Part.Position).Magnitude
						if Distance>1000 then
							Network["Output"].Send(warn,"RetainPart Warning : PartOwnership not applied to BasePart "..Part:GetFullName()..",as it is more than "..gethiddenproperty(LocalPlayer,"MaximumSimulationRadius").." studs away.")
							return false
						end
					else
						Network["Output"].Send(warn,"RetainPart Warning : PartOwnership not applied to BasePart "..Part:GetFullName()..",as the LocalPlayer Character's PrimaryPart does not exist.")
						return false
					end
				end
				table.insert(Network["BaseParts"],Part)
				Part.CustomPhysicalProperties=PhysicalProperties.new(0,0,0,0,0)
				Network["Output"].Send(print,"PartOwnership Output : PartOwnership applied to BasePart "..Part:GetFullName()..".")
				if ReturnFakePart==true then
					return FakePart
				end
			else
				Network["Output"].Send(warn,"RetainPart Warning : PartOwnership not applied to BasePart "..Part:GetFullName()..",as it already active.")
				return false
			end
		end

		Network["RemovePart"]=function(Part)--function for removing ownership of unanchored part
			assert(typeof(Part)=="Instance" and Part:IsA("BasePart"),Network["Output"].Prefix.."RemovePart Error : Invalid syntax: Arg1 (Part) must be a BasePart.")
			local Index=table.find(Network["BaseParts"],Part)
			if Index then
				table.remove(Network["BaseParts"],Index)
				Network["Output"].Send(print,"RemovePart Output: PartOwnership removed from BasePart "..Part:GetFullName()..".")
			else
				Network["Output"].Send(warn,"RemovePart Warning : BasePart "..Part:GetFullName().." not found in BaseParts table.")
			end
		end

		Network["SuperStepper"]=Instance.new("BindableEvent")--make super fast event to connect to
		for _,Event in pairs({RunService.Stepped,RunService.Heartbeat}) do
			Event:Connect(function()
				return Network["SuperStepper"]:Fire(Network["SuperStepper"],tick())
			end)
		end

		Network["PartOwnership"]={};
		Network["PartOwnership"]["PreMethodSettings"]={};
		Network["PartOwnership"]["Enabled"]=false;
		Network["PartOwnership"]["Enable"]=coroutine.create(function()--creating a thread for network stuff
			if Network["PartOwnership"]["Enabled"]==false then
				Network["PartOwnership"]["Enabled"]=true--do cool network stuff before doing more cool network stuff
				Network["PartOwnership"]["PreMethodSettings"].ReplicationFocus=LocalPlayer.ReplicationFocus
				LocalPlayer.ReplicationFocus=workspace
				Network["PartOwnership"]["PreMethodSettings"].SimulationRadius=gethiddenproperty(LocalPlayer,"SimulationRadius")
				Network["PartOwnership"]["Connection"]=Network["SuperStepper"].Event:Connect(function()--super fast asynchronous loop
					sethiddenproperty(LocalPlayer,"SimulationRadius",1/0)
					for _,Part in pairs(Network["BaseParts"]) do--loop through parts and do network stuff
						coroutine.wrap(function()
							if Part:IsDescendantOf(workspace) then
								if Network.CharacterRelative==true then
									local Character=LocalPlayer.Character;
									if Character and Character.PrimaryPart then
										local Distance=(Character.PrimaryPart.Position-Part.Position).Magnitude
										if Distance>1000 then
											Network["Output"].Send(warn,"PartOwnership Warning : PartOwnership not applied to BasePart "..Part:GetFullName()..",as it is more than "..gethiddenproperty(LocalPlayer,"MaximumSimulationRadius").." studs away.")
											Lost=true;
											Network["RemovePart"](Part)
										end
									else
										Network["Output"].Send(warn,"PartOwnership Warning : PartOwnership not applied to BasePart "..Part:GetFullName()..",as the LocalPlayer Character's PrimaryPart does not exist.")
									end
								end
								Part.Velocity=Network["Velocity"]+Vector3.new(0,math.cos(tick()*10)/100,0)--keep network by sending physics packets of 30 magnitude+an everchanging addition in the y level so roblox doesnt get triggered and fuck your ownership
							else
								Network["RemovePart"](Part)
							end
						end)()
					end
				end)
				Network["Output"].Send(print,"PartOwnership Output : PartOwnership enabled.")
			else
				Network["Output"].Send(warn,"PartOwnership Output : PartOwnership already enabled.")
			end
		end)
		Network["PartOwnership"]["Disable"]=coroutine.create(function()
			if Network["PartOwnership"]["Connection"] then
				Network["PartOwnership"]["Connection"]:Disconnect()
				LocalPlayer.ReplicationFocus=Network["PartOwnership"]["PreMethodSettings"].ReplicationFocus
				sethiddenproperty(LocalPlayer,"SimulationRadius",Network["PartOwnership"]["PreMethodSettings"].SimulationRadius)
				Network["PartOwnership"]["PreMethodSettings"]={}
				for _,Part in pairs(Network["BaseParts"]) do
					Network["RemovePart"](Part)
				end
				Network["PartOwnership"]["Enabled"]=false
				Network["Output"].Send(print,"PartOwnership Output : PartOwnership disabled.")
			else
				Network["Output"].Send(warn,"PartOwnership Output : PartOwnership already disabled.")
			end
		end)
		Network["Output"].Send(print,": Loaded.")
	end

	coroutine.resume(Network["PartOwnership"]["Enable"])



	local lp=game.Players.LocalPlayer--local player var
	local char=lp.Character--char var

	lp.Character=nil--nil character for pdeath
	lp.Character=char--newvar

	local hrp=char:FindFirstChild("HumanoidRootPart")--hrp check
	if hrp==nil then return end--return if no hrp

	wait(game.Players.RespawnTime+.3)--nil wait

	hrp:Destroy()--rip hrp
	char.Torso:Destroy()--rip torso
	local clone=char["Body Colors"]:Clone()--body colors clone
	char["Body Colors"]:Destroy()--delete any instances from char that replicates deletion
	clone.Parent=char--parent back in clone in case some script uses it




	player=game:GetService("Players").LocalPlayer
	Gui=player.PlayerGui
	Backpack=player.Backpack
	Mouse=player:GetMouse()

	Parts_Folder=Instance.new("Folder",workspace)

	for i,v in pairs(player.Character:GetChildren()) do
		if v:IsA("Accessory") then
			local Part=Instance.new("Part",Parts_Folder)
			Part.Name=v.Name
			Part.Anchored=true
			Part.Size=v.Handle.Size-Vector3.new(0.001,0.001,0.001)
			Part.Position=player.Character.Head.Position+Vector3.new(math.random(-5,5),math.random(-1,1),math.random(-5,5))
			Part:SetAttribute("Moveable",true)
			Part.Material=Enum.Material.SmoothPlastic
			Part.CanCollide=false
			Part.Color=Color3.new(1,0,0)

			local Hat=v.Handle
			local vbreak=false
			Network.RetainPart(Hat)
			Hat.CustomPhysicalProperties=PhysicalProperties.new(0,0,0,0,0)
			coroutine.wrap(function()
				while task.wait() do
					if vbreak==true then break end
					Hat.CFrame=Part.CFrame
				end
			end)()
			Hat:FindFirstChildWhichIsA("SpecialMesh"):Destroy()
		end
	end


	Move_Tool=Instance.new("Tool",Backpack)
	Rotate_Tool=Instance.new("Tool",Backpack)
	MHandle=Instance.new("Part",Move_Tool)
	RHandle=Instance.new("Part",Rotate_Tool)
	Mgrabs=Instance.new("Handles",Gui)
	Rgrabs=Instance.new("ArcHandles",Gui)
	Outline=Instance.new("Highlight")

	Move_Tool.Name="Move"
	Move_Tool.CanBeDropped=false

	Rotate_Tool.Name="Rotate"
	Rotate_Tool.CanBeDropped=false

	MHandle.Name="Handle"
	MHandle.Transparency=1

	RHandle.Name="Handle"
	RHandle.Transparency=1

	Mgrabs.Visible=false
	Mgrabs.Color3=Color3.new(1,0.8,0)
	Mgrabs.Style="Movement"

	Rgrabs.Visible=false

	Outline.FillTransparency=1
	Outline.OutlineTransparency=0
	Outline.OutlineColor=Color3.new(1,0.8,0)

	Active_Part=nil

	Move_Tool.AncestryChanged:Connect(function()
		if Move_Tool.Parent==char and Active_Part~=nil then
			Mgrabs.Visible=true
			Mgrabs.Adornee=Active_Part
		end
	end)

	Move_Tool.AncestryChanged:Connect(function()
		if Move_Tool.Parent~=char then
			Mgrabs.Visible=false
			Mgrabs.Adornee=nil
		end
	end)

	Mouse.Button1Down:Connect(function()
		if Move_Tool.Parent==char and Mouse.Target:GetAttribute("Moveable") then
			Active_Part=Mouse.Target
			Mgrabs.Visible=true
			Mgrabs.Adornee=Active_Part
			Outline.Parent=Active_Part
		end
		if Rotate_Tool.Parent==char and Mouse.Target:GetAttribute("Moveable") then
			Active_Part=Mouse.Target
			Rgrabs.Visible=true
			Rgrabs.Adornee=Active_Part
			Outline.Parent=Active_Part
		end
	end)

	Rotate_Tool.AncestryChanged:Connect(function()
		if Rotate_Tool.Parent==char and Active_Part~=nil then
			Rgrabs.Visible=true
			Rgrabs.Adornee=Active_Part
		end
	end)

	Rotate_Tool.AncestryChanged:Connect(function()
		if Rotate_Tool.Parent~=char then
			Rgrabs.Visible=false
			Rgrabs.Adornee=nil
		end
	end)

	MOGCFrame=CFrame.new()

	Mgrabs.MouseButton1Down:Connect(function()
		MOGCFrame=Active_Part.CFrame
	end)

	Mgrabs.MouseDrag:Connect(function(knob,pos)
		if knob==Enum.NormalId.Front then
			Active_Part.CFrame=MOGCFrame+MOGCFrame.LookVector*pos
		end
		if knob==Enum.NormalId.Back then
			Active_Part.CFrame=MOGCFrame+MOGCFrame.LookVector*-pos
		end
		if knob==Enum.NormalId.Top then
			Active_Part.CFrame=MOGCFrame+MOGCFrame.UpVector*pos
		end
		if knob==Enum.NormalId.Bottom then
			Active_Part.CFrame=MOGCFrame+MOGCFrame.UpVector*-pos
		end
		if knob==Enum.NormalId.Left then
			Active_Part.CFrame=MOGCFrame+MOGCFrame.RightVector*-pos
		end
		if knob==Enum.NormalId.Right then
			Active_Part.CFrame=MOGCFrame+MOGCFrame.RightVector*pos
		end
	end)

	ROGCFrame=CFrame.new()

	Rgrabs.MouseButton1Down:Connect(function()
		ROGCFrame=Active_Part.CFrame
	end)

	Rgrabs.MouseDrag:Connect(function(knob,angle)
		if knob==Enum.Axis.Y then
			Active_Part.CFrame=ROGCFrame*CFrame.Angles(0,angle,0)
		end
		if knob==Enum.Axis.X then
			Active_Part.CFrame=ROGCFrame*CFrame.Angles(angle,0,0)
		end
		if knob==Enum.Axis.Z then
			Active_Part.CFrame=ROGCFrame*CFrame.Angles(0,0,angle)
		end
	end)



	Mouse.TargetFilter=player.Character



	camera=workspace.CurrentCamera
	input=game:GetService("UserInputService")

	Camera_Part=Instance.new("Part",workspace)
	Camera_Part.Anchored=true
	Camera_Part.Transparency=0.85
	Camera_Part.Shape=Enum.PartType.Ball
	Camera_Part.Size=Vector3.new(0.5,0.5,0.5)
	Camera_Part.Material=Enum.Material.SmoothPlastic

	current_position=char.Head.Position

	camera.CameraSubject=Camera_Part



	for i,v in pairs(char:GetDescendants()) do
		if v:IsA("BasePart") and v.Parent:IsA("Accessory")==false then
			v:Destroy()
		end
	end


	while wait() do
		if vbreak==true then
			break
		end
		if input:IsKeyDown(Enum.KeyCode.D) then
			current_position+=camera.CFrame.RightVector*speed
		end
		if input:IsKeyDown(Enum.KeyCode.A) then
			current_position+=camera.CFrame.RightVector*-speed
		end
		if input:IsKeyDown(Enum.KeyCode.W) then
			current_position+=camera.CFrame.LookVector*speed
		end
		if input:IsKeyDown(Enum.KeyCode.S) then
			current_position+=camera.CFrame.LookVector*-speed
		end
		if input:IsKeyDown(Enum.KeyCode.E) then
			current_position+=camera.CFrame.UpVector*speed
		end
		if input:IsKeyDown(Enum.KeyCode.Q) then
			current_position+=camera.CFrame.UpVector*-speed
		end
		if input:IsKeyDown(Enum.KeyCode.LeftShift) then do
				speed=1.5
			end else
			speed=0.75
		end
		Camera_Part.Position=current_position
	end
end)

cmd.add({"unspblockspam","unstarterblockscam"},{"unspblockspam (unstarterblockspam)","Stops the starterblockspam command"},function()
	anniblockspam=false
end)

cmd.add({"blockspam"},{"blockspam [amount]","Spawn blocks by the given amount"},function(amt)
	amt=tonumber(amt) or 1
	local hatAmount,grabbed=0,{}
	local lastCF=character.PrimaryPart.CFrame
	character:ClearAllChildren()
	respawn()
	repeat
		if character.Name~="respawn_" then
			local c=character
			repeat wait() until c:FindFirstChildWhichIsA("Accoutrement")
			c:MoveTo(lastCF.p)
			wait(1)
			for i,v in pairs(c:GetChildren()) do
				if v:IsA("Accoutrement") then
					v:WaitForChild("Handle")
					v.Handle.CanCollide=true
					if v:FindFirstChildWhichIsA("DataModelMesh",true) then
						v:FindFirstChildWhichIsA("DataModelMesh",true):Destroy()
					end
					v.Parent=workspace
					table.insert(grabbed,v)
				end
			end
			hatAmount=hatAmount+1
		end
		character:ClearAllChildren()
		respawn()
		wait()
	until
	hatAmount >=amt

	repeat wait() until tostring(localPlayer.Character)~="respawn_" and localPlayer.Character
	wait(0.5)

	spawn(function()
		repeat wait() until character.PrimaryPart
		wait(0.2)
		character:SetPrimaryPartCFrame(lastCF)

		for _,item in pairs(grabbed) do
			if item:IsA("Accoutrement") and item:FindFirstChild("Handle") then
				item.Parent=workspace
				wait()
			end
		end
	end)
end)

cmd.add({"hitboxes"},{"hitboxes","shows all the hitboxes"},function()
	settings():GetService("RenderSettings").ShowBoundingBoxes=true
end)

cmd.add({"unhitboxes"},{"unhitboxes","removes the hitboxes outline"},function()
	settings():GetService("RenderSettings").ShowBoundingBoxes=false
end)

cmd.add({"punch"},{"punch","punch tool that flings"},function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/Nameless-Admin/main/punch",true))()
end)

cmd.add({"vfly","vehiclefly"},{"vehiclefly (vfly)","be able to fly vehicles"},function(...)
	FLYING=false
	cmdlp.Character.Humanoid.PlatformStand=false
	wait()



	wait();

	Notify({
		Description="Vehicle fly enabled";
		Title=adminName;
		Duration=5;

	});
	sFLY(true)
	speedofthevfly=(...)
	if (...)==nil then
		speedofthevfly=2
	end
end)

cmd.add({"unvfly","unvehiclefly"},{"unvehiclefly (unvfly)","disable vehicle fly"},function()



	wait();

	Notify({
		Description="Vehicle fly disabled";
		Title=adminName;
		Duration=5;

	});
	FLYING=false
	cmdlp.Character.Humanoid.PlatformStand=false
end)

cmd.add({"trap"},{"trap","makes your tool be away from you making it look like its dropped"},function()

	function Kill(humanoid)
		if not humanoid then
			return
		end
		function getPlr(Name)
			if Name:lower()=="random" then
				return game.Players:GetPlayers()[math.random(#game.Players:GetPlayers())]
			else
				Name=Name:lower():gsub("%s","")
				for _,x in next,game.Players:GetPlayers() do
					if x.Name:lower():match(Name) then
						return x
					elseif x.DisplayName:lower():match("^"..Name) then
						return x
					end
				end
			end
		end

		local Character=game.Players.LocalPlayer.Character
		local Humanoid=Character:FindFirstChildOfClass("Humanoid")
		local RootPart=getRoot(Character)
		local Tool=Character:FindFirstChildOfClass("Tool")
		local Handle=Tool and Tool:FindFirstChild("Handle")

		if not Handle then
			return
		end

		local TPlayer=getPlr(humanoid.Parent.Name)
		local TCharacter=TPlayer and TPlayer.Character
		local THumanoid=TCharacter and TCharacter:FindFirstChildOfClass("Humanoid")
		local TRootPart=THumanoid and THumanoid.RootPart

		if not TPlayer or not TCharacter or not THumanoid or not TRootPart then
			return
		end

		if THumanoid.Sit then
			return
		end

		local OldCFrame=RootPart.CFrame

		Humanoid:Destroy()
		local NewHumanoid=Humanoid:Clone()
		NewHumanoid.Parent=Character
		NewHumanoid:UnequipTools()
		NewHumanoid:EquipTool(Tool)
		Tool.Parent=workspace

		local Timer=os.time()

		repeat
			if (TRootPart.CFrame.p-RootPart.CFrame.p).Magnitude<500 then
				Tool.Grip=CFrame.new()
				Tool.Grip=Handle.CFrame:ToObjectSpace(TRootPart.CFrame):Inverse()
			end
			firetouchinterest(Handle,TRootPart,0)
			firetouchinterest(Handle,TRootPart,1)
			RunService2.Heartbeat:wait()
			RunService2.Heartbeat:wait()
		until Tool.Parent~=Character or not TPlayer or not TRootPart or THumanoid.Health <=0 or os.time()>Timer+.20
		wait(0.4)
		Player.Character=nil
		NewHumanoid.Health=0
		player.CharacterAdded:wait(1)
		repeat RunService2.Heartbeat:wait() until Player.Character:FindFirstChild("HumanoidRootPart")
		getRoot(Player.Character).CFrame=OldCFrame
	end

	if not LoopKill then
		Kill()
	else
		while LoopKill do
			Kill()
		end
	end

	function equipRandomTool()
		local player=game.Players.LocalPlayer
		local backpack=player.Backpack
		local tools=backpack and backpack:GetChildren()
		if not tools or #tools==0 then
			return
		end
		local randomTool=tools[math.random(#tools)]
		randomTool.Grip=CFrame.new(0,2,19)
		player.Character.Humanoid:EquipTool(randomTool)
		randomTool.Parent=player.Character
		local handle=randomTool:FindFirstChild("Handle")
		if handle then
			handle.Touched:Connect(Kill)
		end
	end

	equipRandomTool()
end)

cmd.add({"kill"},{"kill <player>","after a while i have added a working kill script thats almost instant to this admin"},function(...)
	Target=(...)

	if Target=="all" or Target=="others" then
		print("Patched")
	else
		function Kill()
			if not getPlr(Target) then
			end

			repeat RunService2.Heartbeat:wait() until getPlr(Target).Character and getPlr(Target).Character:FindFirstChildOfClass("Humanoid") and getPlr(Target).Character:FindFirstChildOfClass("Humanoid").Health>0
			local Character
			local Humanoid
			local RootPart
			local Tool
			local Handle

			local TPlayer=getPlr(Target)
			local TCharacter=TPlayer.Character
			local THumanoid
			local TRootPart

			if Player.Character and Player.Character and Player.Character.Name==Player.Name then
				Character=Player.Character
			else
			end
			if Character:FindFirstChildOfClass("Humanoid") then
				Humanoid=Character:FindFirstChildOfClass("Humanoid")
			else
			end
			if Humanoid and Humanoid.RootPart then
				RootPart=Humanoid.RootPart
			else
			end
			if Character:FindFirstChildOfClass("Tool") then
				Tool=Character:FindFirstChildOfClass("Tool")
			elseif Player.Backpack:FindFirstChildOfClass("Tool") and Humanoid then
				Tool=Player.Backpack:FindFirstChildOfClass("Tool")
				Humanoid:EquipTool(Player.Backpack:FindFirstChildOfClass("Tool"))
			else
			end
			if Tool and Tool:FindFirstChild("Handle") then
				Handle=Tool.Handle
			else
			end

			--Target
			if TCharacter:FindFirstChildOfClass("Humanoid") then
				THumanoid=TCharacter:FindFirstChildOfClass("Humanoid")
			else
				return Message("Error",">   Missing Target Humanoid")
			end
			if THumanoid.RootPart then
				TRootPart=THumanoid.RootPart
			else
				return Message("Error",">   Missing Target RootPart")
			end

			if THumanoid.Sit then
				return Message("Error",">   Target is seated")
			end

			local OldCFrame=RootPart.CFrame

			Humanoid:Destroy()
			local NewHumanoid=Humanoid:Clone()
			NewHumanoid.Parent=Character
			NewHumanoid:UnequipTools()
			NewHumanoid:EquipTool(Tool)
			Tool.Parent=workspace

			local Timer=os.time()

			repeat
				if (TRootPart.CFrame.p-RootPart.CFrame.p).Magnitude<500 then
					Tool.Grip=CFrame.new()
					Tool.Grip=Handle.CFrame:ToObjectSpace(TRootPart.CFrame):Inverse()
				end
				firetouchinterest(Handle,TRootPart,0)
				firetouchinterest(Handle,TRootPart,1)
				RunService2.Heartbeat:wait()
			until Tool.Parent~=Character or not TPlayer or not TRootPart or THumanoid.Health <=0 or os.time()>Timer+.20
			Player.Character=nil
			NewHumanoid.Health=0
			player.CharacterAdded:wait(1)
			repeat RunService2.Heartbeat:wait() until Player.Character:FindFirstChild("HumanoidRootPart")
			getRoot(Player.Character).CFrame=OldCFrame
		end

		if not LoopKill then
			Kill()
		else
			while LoopKill do
				Kill()
			end
		end
	end
end)

cmd.add({"toolblockspam"},{"toolblockspam [amount]","Spawn blocks by the given amount"},function(amt)
	if not amt then amt=1 end
	amt=tonumber(amt)
	local tools=getTools(amt)
	for i,tool in pairs(tools) do
		wait()
		spawn(function()
			wait(0.1)
			tool.Parent=character
			tool.CanBeDropped=true
			wait(0.1)
			for _,mesh in pairs(tool:GetDescendants()) do
				if mesh:IsA("DataModelMesh") then
					mesh:Destroy()
				end
			end
			for _,weld in pairs(character:GetDescendants()) do
				if weld.Name=="RightGrip" then
					weld:Destroy()
				end
			end
			wait(0.1)
			tool.Parent=workspace
			wait(0.1)
			local cf,p=CFrame.new(),character:FindFirstChild("HumanoidRootPart") or character:FindFirstChild("Head")
			if p then
				cf=p.CFrame
			end
			respawn()
			player.CharacterAdded:wait(1); wait(0.2);
			character:WaitForChild("HumanoidRootPart").CFrame=cf
		end)
	end
end)

cmd.add({"equiptools","equipall"},{"equiptools","Equip all of your tools"},function()
	local backpack=localPlayer:FindFirstChildWhichIsA("Backpack")
	if backpack then
		for _,tool in pairs(backpack:GetChildren()) do
			if tool:IsA("Tool") then
				tool.Parent=character
			end
		end
	end
end)

cmd.add({"tweento","tweengoto"},{"tweengoto (tweento)","Teleportation method that bypassses some anticheats"},function(...)
	local Username=(...)


	char=game.Players.LocalPlayer

	TweenService=game:GetService("TweenService")

	speaker=game.Players.LocalPlayer
	Players=game:GetService("Players")

	local players=getPlr(Username)
	TweenService:Create(getRoot(speaker.Character),TweenInfo.new(2,Enum.EasingStyle.Linear),{CFrame=getRoot(players.Character).CFrame+Vector3.new(3,1,0)}):Play()

end)

cmd.add({"reach"},{"reach {number}","Sword reach"},function(reachsize)
	local reachsize=reachsize or 25
	local Tool=game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") or Player.Backpack:FindFirstChildOfClass("Tool")
	if Tool:FindFirstChild("OGSize3") then
		Tool.Handle.Size=Tool.OGSize3.Value
		Tool.OGSize3:Destroy()
		Tool.Handle.FunTIMES:Destroy()
	end
	local val=Instance.new("Vector3Value",Tool)
	val.Name="OGSize3"
	val.Value=Tool.Handle.Size
	local sb=Instance.new("SelectionBox")
	sb.Adornee=Tool.Handle
	sb.Name="FunTIMES"
	sb.Parent=Tool.Handle
	Tool.Handle.Massless=true
	Tool.Handle.Size=Vector3.new(Tool.Handle.Size.X,Tool.Handle.Size.Y,reachsize)
end)

cmd.add({"aura"},{"aura {number}","Sword aura"},function(reachsize)
	local reachsize=reachsize or 25
	local Tool=game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") or game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
	if Tool:FindFirstChild("OGSize3") then
		Tool.Handle.Size=Tool.OGSize3.Value
		Tool.OGSize3:Destroy()
		Tool.Handle.FunTIMES:Destroy()
	end
	local val=Instance.new("Vector3Value",Tool)
	val.Name="OGSize3"
	val.Value=Tool.Handle.Size
	local sb=Instance.new("SelectionBox")
	sb.Adornee=Tool.Handle
	sb.Name="FunTIMES"
	sb.Transparency=0.5
	sb.Parent=Tool.Handle
	Tool.Handle.Massless=true
	Tool.Handle.Size=Vector3.new(reachsize,reachsize,reachsize)
end)

cmd.add({"droptools"},{"dropalltools","Drop all of your tools"},function()
	local backpack=localPlayer:FindFirstChildWhichIsA("Backpack")
	if backpack then
		for _,tool in pairs(backpack:GetChildren()) do
			if tool:IsA("Tool") then
				tool.Parent=character
			end
		end
	end
	wait()
	for _,tool in pairs(character:GetChildren()) do
		if tool:IsA("Tool") then
			tool.Parent=workspace
		end
	end
end)

cmd.add({"notools"},{"notools","Remove your tools"},function()
	for _,tool in pairs(character:GetChildren()) do
		if tool:IsA("Tool") then
			tool:Destroy()
		end
	end
	for _,tool in pairs(localPlayer.Backpack:GetChildren()) do
		if tool:IsA("Tool") then
			tool:Destroy()
		end
	end
end)

cmd.add({"breaklayeredclothing","blc"},{"breaklayeredclothing (blc)","Streches your layered clothing"},function()
	--its literally just leg resize with swim
	wait();

	Notify({
		Description="Break layered clothing executed,if you havent already equip shirt,jacket,pants and shoes (Layered Clothing ones)";
		Title=adminName;
		Duration=5;

	});
	local swimming=false
	local RunService=game:GetService("RunService")
	oldgrav=workspace.Gravity
	workspace.Gravity=0
	local char=game.Players.LocalPlayer.Character
	local swimDied=function()
		workspace.Gravity=oldgrav
		swimming=false
	end
	local Humanoid=char:FindFirstChildWhichIsA("Humanoid")
	gravReset=Humanoid.Died:Connect(swimDied)
	local enums=Enum.HumanoidStateType:GetEnumItems()
	table.remove(enums,table.find(enums,Enum.HumanoidStateType.None))
	for i,v in pairs(enums) do
		Humanoid:SetStateEnabled(v,false)
	end
	Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
	swimbeat=RunService.Heartbeat:Connect(function()
		pcall(function()
			getRoot(char).Velocity=((Humanoid.MoveDirection~=Vector3.new() or UserInputService:IsKeyDown(Enum.KeyCode.Space)) and getRoot(char).Velocity or Vector3.new())
		end)
	end)
	swimming=true
	local Clip=false
	wait(0.1)
	function NoclipLoop()
		if Clip==false and char~=nil then
			for _,child in pairs(char:GetDescendants()) do
				if child:IsA("BasePart") and child.CanCollide==true then
					child.CanCollide=false
				end
			end
		end
	end
	Noclipping=RunService.Stepped:Connect(NoclipLoop)
	loadstring(game:HttpGet('https://raw.githubusercontent.com/ltseverydayyou/Nameless-Admin/main/leg%20resize'))()
end)


cmd.add({"fpsbooster","lowgraphics","boostfps","lowg"},{"fpsbooster (lowgraphics,boostfps,lowg)","Low graphics mode if the game is laggy"},function()
	local decalsyeeted=true
	local g=game
	local w=g.Workspace
	local l=g.Lighting
	local t=w.Terrain
	sethiddenproperty(l,"Technology",2)
	sethiddenproperty(t,"Decoration",false)
	t.WaterWaveSize=0
	t.WaterWaveSpeed=0
	t.WaterReflectance=0
	t.WaterTransparency=0
	l.GlobalShadows=0
	l.FogEnd=9e9
	l.Brightness=0
	settings().Rendering.QualityLevel="Level01"
	for i,v in pairs(w:GetDescendants()) do
		if v:IsA("BasePart") and not v:IsA("MeshPart") then
			v.Material="Plastic"
			v.Reflectance=0
		elseif (v:IsA("Decal") or v:IsA("Texture")) and decalsyeeted then
			v.Transparency=1
		elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
			v.Lifetime=NumberRange.new(0)
		elseif v:IsA("Explosion") then
			v.BlastPressure=1
			v.BlastRadius=1
		elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
			v.Enabled=false
		elseif v:IsA("MeshPart") and decalsyeeted then
			v.Material="Plastic"
			v.Reflectance=0
			v.TextureID=10385902758728957
		elseif v:IsA("SpecialMesh") and decalsyeeted  then
			v.TextureId=0
		elseif v:IsA("ShirtGraphic") and decalsyeeted then
			v.Graphic=0
		elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
			v[v.ClassName.."Template"]=0
		end
	end
	for i=1,#l:GetChildren() do
		e=l:GetChildren()[i]
		if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
			e.Enabled=false
		end
	end
	w.DescendantAdded:Connect(function(v)
		wait()--prevent errors and shit
		if v:IsA("BasePart") and not v:IsA("MeshPart") then
			v.Material="Plastic"
			v.Reflectance=0
		elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
			v.Transparency=1
		elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
			v.Lifetime=NumberRange.new(0)
		elseif v:IsA("Explosion") then
			v.BlastPressure=1
			v.BlastRadius=1
		elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
			v.Enabled=false
		elseif v:IsA("MeshPart") and decalsyeeted then
			v.Material="Plastic"
			v.Reflectance=0
			v.TextureID=10385902758728957
		elseif v:IsA("SpecialMesh") and decalsyeeted then
			v.TextureId=0
		elseif v:IsA("ShirtGraphic") and decalsyeeted then
			v.ShirtGraphic=0
		elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
			v[v.ClassName.."Template"]=0
		end
	end)
end)

	--[[cmd.add({"vr","clovr","vrscript","fevr"},{"vr (clovr,vrscript,fevr)","FE VR SCRIPT AKA CLOVR"},function()
		--should be patched--
	 loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/Nameless-Admin/main/CloVR"))();
	 end)]]

cmd.add({"antilag","boostfps"},{"antilag (boostfps)","Low Graphics"},function()
	_G.Settings={
		Players={
			["Ignore Me"]=true,
			["Ignore Others"]=true
		},
		Meshes={
			Destroy=false,
			LowDetail=true
		},
		Images={
			Invisible=true,
			LowDetail=true,
			Destroy=true,
		},
		Other={
			["No Particles"]=true,
			["No Camera Effects"]=true,
			["No Explosions"]=true,
			["No Clothes"]=true,
			["Low Water Graphics"]=true,
			["No Shadows"]=true,
			["Low Rendering"]=true,
			["Low Quality Parts"]=true
		}
	}
	loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/uuuuuuu/main/low%20detail"))()
end)

cmd.add({"flash"},{"flash <player>","Flashes the targets screen"},function(...)
	local oldCF=getRoot(game.Players.LocalPlayer.Character).CFrame

	Target=(...)
	local TPlayer=getPlr(Target)
	TRootPart=getRoot(TPlayer.Character)
	local Character=Player.Character
	local PlayerGui=gethui()
	local Backpack=Player:WaitForChild("Backpack")
	local Humanoid=Character and Character:FindFirstChildWhichIsA("Humanoid") or false
	local RootPart=Character and Humanoid and Humanoid.RootPart or false
	local RightArm=Character and Character:FindFirstChild("Right Arm") or Character:FindFirstChild("RightHand")
	if not Humanoid or not RootPart or not RightArm then
		return
	end
	Humanoid:UnequipTools()
	local MainTool=Backpack:FindFirstChildWhichIsA("Tool") or false
	if not MainTool or not MainTool:FindFirstChild("Handle") then
		return
	end
	Humanoid.Name="DAttach"
	local l=Character["DAttach"]:Clone()
	l.Parent=Character
	l.Name="Humanoid"
	wait()
	Character["DAttach"]:Destroy()
	game.Workspace.CurrentCamera.CameraSubject=Character
	Character.Animate.Disabled=true
	wait()
	Character.Animate.Disabled=false
	Character.Humanoid:EquipTool(MainTool)
	wait()
	CF=Player.Character.PrimaryPart.CFrame
	if firetouchinterest then
		local flag=false
		task.defer(function()
			MainTool.Handle.AncestryChanged:wait()
			flag=true
		end)
		repeat
			firetouchinterest(MainTool.Handle,TRootPart,0)
			firetouchinterest(MainTool.Handle,TRootPart,1)
			wait()
		until flag
		for i=1,50,1 do
			print('pee'..i)
			getRoot(game.Players.LocalPlayer.Character).CFrame=CFrame.new(0,9e+18,0)
			wait(.04)
			getRoot(game.Players.LocalPlayer.Character).CFrame=oldCF
			wait(.04)
		end
	else
		getRoot(Player.Character).CFrame=
			getRoot(TCharacter).CFrame
		wait()
		getRoot(Player.Character).CFrame=
			getRoot(TCharacter).CFrame
		wait()
	end
	player.CharacterAdded:wait(1):waitForChild("HumanoidRootPart").CFrame=CF
end)

cmd.add({"void"},{"void <player>","Kill the given players without FE god"},function(...)
	Target=(...)
	local Character=Player.Character
	local PlayerGui=Player:waitForChild("PlayerGui")
	local Backpack=Player:waitForChild("Backpack")
	local Humanoid=Character and Character:FindFirstChildWhichIsA("Humanoid") or false
	local RootPart=Character and Humanoid and Humanoid.RootPart or false
	local RightArm=Character and Character:FindFirstChild("Right Arm") or Character:FindFirstChild("RightHand")
	if not Humanoid or not RootPart or not RightArm then
		return
	end

	Humanoid:UnequipTools()
	local MainTool=Backpack:FindFirstChildWhichIsA("Tool") or false
	if not MainTool or not MainTool:FindFirstChild("Handle") then
		return
	end

	local TPlayer=getPlr(Target)
	local TCharacter=TPlayer and TPlayer.Character

	local THumanoid=TCharacter and TCharacter:FindFirstChildWhichIsA("Humanoid") or false
	local TRootPart=TCharacter and THumanoid and THumanoid.RootPart or false
	if not THumanoid or not TRootPart then
		return
	end

	Character.Humanoid.Name="DAttach"
	local l=Character["DAttach"]:Clone()
	l.Parent=Character
	l.Name="Humanoid"
	wait()
	Character["DAttach"]:Destroy()
	game.Workspace.CurrentCamera.CameraSubject=Character
	Character.Animate.Disabled=true
	wait()
	Character.Animate.Disabled=false
	Character.Humanoid:EquipTool(MainTool)
	wait()
	CF=Player.Character.PrimaryPart.CFrame
	XC=getRoot(TCharacter).CFrame.X
	ZC=getRoot(TCharacter).CFrame.Z
	if firetouchinterest then
		local flag=false
		task.defer(function()
			MainTool.Handle.AncestryChanged:wait()
			flag=true
		end)
		repeat
			firetouchinterest(MainTool.Handle,TRootPart,0)
			firetouchinterest(MainTool.Handle,TRootPart,1)
			wait()
		until flag
		wait(0.2)
		getRoot(Player.Character).CFrame=CFrame.new(0,-1000,0)
	else
		getRoot(Player.Character).CFrame=
			getRoot(TCharacter).CFrame
		wait()
		getRoot(Player.Character).CFrame=
			getRoot(TCharacter).CFrame
		wait()
		getRoot(Player.Character).CFrame=CFrame.new(XC,-99,ZC)
		wait()
	end
	wait(.3)
	Player.Character:SetPrimaryPartCFrame(CF)
	if Humanoid.RigType==Enum.HumanoidRigType.R6 then
		Character["Right Arm"].RightGrip:Destroy()
	else
		Character["RightHand"].RightGrip:Destroy()
		Character["RightHand"].RightGripAttachment:Destroy()
	end
	wait(0.02)
	respawn()
end)

local annoyloop=false
cmd.add({"annoy"},{"annoy <player>","Annoys the given player"},function(...)
	annoyloop=true
	User=(...)
	Target=getPlr(User)
	local SaveCFrame=getRoot(game.Players.LocalPlayer.Character).CFrame
	repeat wait()
		getRoot(game.Players.LocalPlayer.Character).CFrame=getRoot(Target.Character).CFrame+Vector3.new(math.random(-2,2),math.random(0,2),math.random(-2,2))
		game:GetService('RunService').RenderStepped:Wait()
		wait(.1)
	until annoyloop==false
	getRoot(game.Players.LocalPlayer.Character).CFrame=SaveCFrame

end)

cmd.add({"unannoy"},{"unannoy","Stops the annoy command"},function()
	annoylo‚Ä¶
